---
import Layout from "../../layouts/Layout.astro" 
import Image from "../../components/Image.astro" 
import Section from "../../components/Section.astro" 
import SubSection from "../../components/SubSection.astro" 
import SubSubSection from "../../components/SubSubSection.astro" 
import BlueText from "../../components/BlueText.astro" 
import RedText from "../../components/RedText.astro" 
import InlineEquation from "../../components/InlineEquation.astro"
import DisplayEquation from "../../components/DisplayEquation.astro"
import PrairieDrawCanvas from "../../components/PrairieDrawCanvas.astro"
import CalloutContainer from "../../components/CalloutContainer.astro"
import CalloutCard from "../../components/CalloutCard.astro"
import SubSubSubSection from "../../components/SubSubSubSection.astro"
import DisplayEquationCustom from "../../components/DisplayEquationCustom.astro"
import Enumerate from "../../components/Enumerate.astro" 
import Item from "../../components/Item.astro" 
import Itemize from "../../components/Itemize.astro"
import Col from "../../components/Col.astro"
import Row from "../../components/Row.astro"
import DisplayTable from "../../components/DisplayTable.astro"
import InlineCanvas from "../../components/InlineCanvas.astro"
---


<Layout title = "Particle kinematics" description = "Learn how velocity and acceleration of particles behave in the Cartesian, Polar, and Tangent-Normal coordinate systems.">

<div slot="navtree">
  <ul class='list-group list-group-flush py-0'> 
    <li class='list-group-item py-0'><a class='text-decoration-none subsection' href='#position_vectors'>Position vectors</a>
		<ul class='list-group list-group-flush py-0'> 
            <li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#Transformation_position_vectors'>Transformation of position vectors</a></li>  
        </ul>
    </li> 
	<li class='list-group-item py-0'><a class='text-decoration-none subsection' href='#velocity_acceleration_vectors'>Velocity and acceleration vectors</a>
		<ul class='list-group list-group-flush py-0'> 
            <li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#cartesian_basis'>Velocity and acceleration in Cartesian basis</a></li>  
			<li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#polar_basis'>Velocity and acceleration in polar basis</a></li> 
			<li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#summary_table'>Summary table</a></li>
        </ul>
    </li> 
	<li class='list-group-item py-0'><a class='text-decoration-none subsection' href='#rotating_frames'>Rotating frames</a>
		<ul class='list-group list-group-flush py-0'> 
            <li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#angular_velocity'>Angular velocity</a></li>  
			<li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#derivatives_rotations'>Vector derivatives and rotations</a></li> 
			<li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#rotations_2D'>Rotations in 2D</a></li>
			<li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#rotations_positions'>Rotations and vector "positions"</a></li>
			<li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#rotations_properties'>Properties of rotations</a></li>
			<li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#rodrigues_formula'>Rodrigues' rotations formula</a></li>
			<li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#angular_acceleration'>Angular acceleration</a></li>
        </ul>
    </li> 
		<li class='list-group-item py-0'><a class='text-decoration-none subsection' href='#tangential_normal_basis'>Tangential and normal basis</a>
		<ul class='list-group list-group-flush py-0'> 
            <li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#normal_basis'>Normal basis</a></li>
            <li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#curvature'>Curvature and torsion</a></li>  
			<li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#derivatives_angular_velocity'>Basis derivatives and angular velocity</a></li> 
			<li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#normal_tangential_acceleration'>Normal and tangential kinematics</a></li>
			<li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#system_comparison'>Tangent lines and osculating circles</a></li>
      <li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#curvature_on_curves'>Curvature on curves</a></li>
			<li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#system_comparison'>System comparison: Cartesian/polar/tangent-normal</a></li>
        </ul>
    </li> 
  </ul>
</div>


<Section title="Particle kinematics" id="particle_kinematics">

    <p>
        The two basic geometric objects we are using are
        positions and vectors. Positions describe locations
        in space, while vectors describe length and direction (no
        position information). To describe the <em>kinematics</em>
        (motion) of bodies we need to relate positions and vectors
        to each other.
    </p>
  </Section>

  <SubSection title="Position vectors" id="position_vectors">
        <p>
          Two positions <b>P</b> and <b>Q</b> can be used to define a vector <InlineEquation equation="\\vec{r}_{PQ} = \\vec{PQ}"/> from <b>P</b> to <b>Q</b>. We call this the <em>relative position</em> of
          <b>Q</b> from <b>P</b>. If we start from the origin <b>O</b>, so we have <InlineEquation equation="\\vec{r}_{OP} = \\vec{OP}"/>, then we call this the <em>position vector</em> of
          position <b>P</b>. When it is clear, we will write <InlineEquation equation="\\vec{r}_P"/> for this position vector, or
          sometimes even just <InlineEquation equation="\\vec{r}"/>.
		    </p>
		<PrairieDrawCanvas height="600" width="600" id="rkv-fp-c">
      <p class="controls">
        <button class="anim-toggle:rkv-fp-c" onclick="rkv_fp_c.toggleAnim()">animate</button>
        <button class="reset:rkv-fp-c" onclick="rkv_fp_c.reset()">reset</button>
      </p>
      <p class="figureCaption">
        Points \(P\) and \(Q\) and their relative and absolute
        position vectors. Note that we can write the position
        vectors with respect to different origins and in different
        bases.
      </p>
    </PrairieDrawCanvas>   
    <CalloutContainer slot = "cards">
      <CalloutCard title = "Heads up!">
        <p>
          Similar to particle kinematics, <strong><a href = "/dyn/rigid_body_kinematics">rigid body kinematics</a></strong> also builds on this content later in the course.
        </p>
        <PrairieDrawCanvas id = "rkg-fr-c" height = "250" width = "250"/>
        <p>
          Rigid body kinematics examines the velocity and acceleration of particles on the same rigid body.
        </p>
      </CalloutCard>
    </CalloutContainer>
  </SubSection>
  
    <SubSubSection title="Transformation of position vectors" id="Transformation_position_vectors">
        <p>
          The position vector <InlineEquation equation="\\vec{r}_{OP}"/> a point <b>P</b> depends on which origin we are using. Using a different origin will result in a different position vector for the same point. The position vectors of a point from two different origins differ by the offset vector between the origins:
		</p>
		
		<DisplayEquation title="Change of origin for position vectors." id="rkv-eo" background="True" equation="\\begin{aligned} \\overrightarrow{O_1 P} &amp;= \\overrightarrow{O_1 O_2} + \\overrightarrow{O_2 P} \\\\ \\vec{r}_{O_1 P} &amp;= \\vec{r}_{O_1 O_2} + \\vec{r}_{O_2 P} \\end{aligned}" />
		
        <p>
			Position vectors are defined by the origin and the point, but not by any choice of basis. We can write any position vector in any basis and it is still the same vector.
		</p>
		
		<PrairieDrawCanvas height="600" width="600" id="rkv-fo-c">
      <p class="controls">
        <button class="anim-toggle:rkv-fo-c" onclick="rkv_fo_c.toggleAnim()">animate</button>
        <button class="reset:rkv-fo-c" onclick="rkv_fo_c.reset()">reset</button>
        <button class="option-toggle:rkv-fo-c:showLabels" onclick="rkv_fo_c.toggleOption('showLabels')">show labels</button>
      </p>

      <Row> 
        <Col values="12">
          <div class="d-flex  align-items-baseline">
            <p class="me-1">Basis for <InlineEquation equation="\\vec{r}_{O_1P}" />:</p>
            <input type="radio" name="rkv-fo-c-r1Basis" value="none" class="data-input:rkv-fo-c:r1Basis ms-2 me-1" checked onchange="rkv_fo_c.setOption('r1Basis', this.value)"/> none
            <input type="radio" name="rkv-fo-c-r1Basis" value="ij" class="data-input:rkv-fo-c:r1Basis ms-2 me-1" /onchange="rkv_fo_c.setOption('r1Basis', this.value)"> <InlineEquation equation="\\hat\\imath,\\hat\\jmath" />
            <input type="radio" name="rkv-fo-c-r1Basis" value="uv" class="data-input:rkv-fo-c:r1Basis ms-2 me-1" /onchange="rkv_fo_c.setOption('r1Basis', this.value)"> <InlineEquation equation="\\hat{u},\\hat{v}" />
          </div>
        </Col>
        <Col values="12">
          <div class="d-flex align-items-baseline">
            <p class="me-1">Basis for <InlineEquation equation="\\vec{r}_{O_1P}" />:</p>
            <input type="radio" name="rkv-fo-c-r2Basis" value="none" class="data-input:rkv-fo-c:r2Basis ms-2 me-1" checked onchange="rkv_fo_c.setOption('r2Basis', this.value)"/> none
            <input type="radio" name="rkv-fo-c-r2Basis" value="ij" class="data-input:rkv-fo-c:r2Basis ms-2 me-1" /onchange="rkv_fo_c.setOption('r2Basis', this.value)"> <InlineEquation equation="\\hat\\imath,\\hat\\jmath" />
            <input type="radio" name="rkv-fo-c-r2Basis" value="uv" class="data-input:rkv-fo-c:r2Basis ms-2 me-1" /onchange="rkv_fo_c.setOption('r2Basis', this.value)"> <InlineEquation equation="\\hat{u},\\hat{v}" />
          </div>
        </Col>
      </Row>        
    </PrairieDrawCanvas>
    </SubSubSection>

   <SubSection title="Velocity and acceleration vectors" id="velocity_acceleration_vectors">
		<p>
			The velocity <InlineEquation equation="\\vec{v}"/> and acceleration <InlineEquation equation="\\vec{a}"/> are the first and second derivatives of the position vector <InlineEquation equation="\\vec{r}"/>. Technically, this is the velocity and acceleration relative to the given origin, as discussed in detail in the sections on relative motion and frames.
		</p>
		 
		 <DisplayEquation title="Definition of velocity and acceleration." id="rkv-ev" background="True" equation="\\begin{aligned} \\vec{v} &amp;= \\dot{\\vec{r}}\\\\ \\vec{a} &amp;= \\dot{\\vec{v}} \\end{aligned}" />
   
        <p>
		 The velocity can be decomposed into components parallel and perpendicular to the position vector, reflecting changes in the length and direction of <InlineEquation equation="\\vec{r}"/>.
         </p>
		 
		 
		 <DisplayEquation title="Decomposition of velocity and acceleration vectors." id="rkv-ec" background="True" equation="\\begin{aligned} \\vec{v}_{proj} &amp;= Proj(\\vec{v}, \\vec{r}) = \\dot{r}\\hat{r}  \\\\  \\vec{v}_{comp} &amp;= Comp(\\vec{v}, \\vec{r}) = r\\dot{\\hat{r}}  \\\\ \\vec{a}_{proj} &amp;= Proj(\\vec{a}, \\vec{v}) = \\dot{v}\\hat{v} \\\\ \\vec{a}_{comp} &amp;= Comp(\\vec{a}, \\vec{v}) = v\\dot{\\hat{v}} \\end{aligned}" />
		 
		 <PrairieDrawCanvas id="rkv-fa-c" width="600" height="400">
      <p class="controls">
        <button class="anim-toggle:rkv-fa-c" onclick="rkv_fa_c.toggleAnim()">animate</button>
        <button class="reset:rkv-fa-c" onclick="rkv_fa_c.reset()">reset</button>
        <button class="option-toggle:rkv-fa-c:showLabels" onclick="rkv_fa_c.toggleOption('showLabels')">show labels</button>
      </p>
      <table class="alignTop">
        <tr>
          <td>Show:</td>
          <td colspan="4">
            <button class="option-toggle:rkv-fa-c:showZeroTime" onclick="rkv_fa_c.toggleOption('showZeroTime')">\(t = 0\) quantities</button>
          </td>
        </tr>
        <tr>
          <td>Movement:</td>
          <td><input type="radio" name="rkv-fa-c-movement" value="circle" class="data-input:rkv-fa-c:movement" onclick="rkv_fa_c.setOption('movement', this.value)" checked/> circle</td>
          <td><input type="radio" name="rkv-fa-c-movement" value="varCircle" class="data-input:rkv-fa-c:movement" onclick="rkv_fa_c.setOption('movement', this.value)"/> var-circle</td>
          <td><input type="radio" name="rkv-fa-c-movement" value="ellipse" class="data-input:rkv-fa-c:movement" onclick="rkv_fa_c.setOption('movement', this.value)"/> ellipse</td>
          <td><input type="radio" name="rkv-fa-c-movement" value="arc" class="data-input:rkv-fa-c:movement" /> arc</td>
        </tr>
        <tr>
          <td></td>
          <td><input type="radio" name="rkv-fa-c-movement" value="trefoil" class="data-input:rkv-fa-c:movement" onclick="rkv_fa_c.setOption('movement', this.value)"/> trefoil</td>
          <td><input type="radio" name="rkv-fa-c-movement" value="eight" class="data-input:rkv-fa-c:movement" onclick="rkv_fa_c.setOption('movement', this.value)"/> eight</td>
          <td><input type="radio" name="rkv-fa-c-movement" value="comet" class="data-input:rkv-fa-c:movement" onclick="rkv_fa_c.setOption('movement', this.value)"/> comet</td>
          <td><input type="radio" name="rkv-fa-c-movement" value="pendulum" class="data-input:rkv-fa-c:movement" onclick="rkv_fa_c.setOption('movement', this.value)"/> pendulum</td>
        </tr>
        <tr>
          <td>Show:</td>
          <td colspan="4">
            <button class="option-toggle:rkv-fa-c:showVelocity" onclick="rkv_fa_c.toggleOption('showVelocity')">velocity</button>
            <button class="option-toggle:rkv-fa-c:showAcceleration" onclick="rkv_fa_c.toggleOption('showAcceleration')">acceleration</button>
            <button class="option-toggle:rkv-fa-c:showAnchoredVelocity" onclick="rkv_fa_c.toggleOption('showAnchoredVelocity')">anchored velocity</button>
            <button class="option-toggle:rkv-fa-c:showPath" onclick="rkv_fa_c.toggleOption('showPath')">path</button>
          </td>
        </tr>
        <tr>
          <td></td>
          <td colspan="4">
            <button class="option-toggle:rkv-fa-c:showVelDecomp" onclick="rkv_fa_c.toggleOption('showVelDecomp')">velocity decomposition</button>
            <button class="option-toggle:rkv-fa-c:showAccDecomp" onclick="rkv_fa_c.toggleOption('showAccDecomp')">acceleration decomposition</button>
          </td>
        </tr>
      </table>
      <p class="figureCaption mt-2">
        Velocity and acceleration of various movements. Compare to
        Figure <a href="rvc.html#rvc-fp">#rvc-fp</a>.
      </p>
     </PrairieDrawCanvas>
		 
    <CalloutContainer slot = "cards">
      <CalloutCard title = "Application alert!">
        <p>
          <a href = "/dyn/track_transition_curves">Track transition curves</a> uses <strong>velocity and acceleration vectors.</strong>
        </p>
        <Image src = "/dyn/particle_kinematics/highway.jpg" width = "7"/>
        <p>
          Velocity and acceleration vectors can be used to analyze optimal road curves for driving.
        </p>
      </CalloutCard>
      <CalloutCard title = "Application alert!">
        <p>
          <a href = "/dyn/projectiles_with_air_resistance">Projectiles with air resistance</a> uses <strong>velocity and acceleration vectors.</strong>
        </p>
        <Image src = "/dyn/particle_kinematics/baseball_field.jpg" width = "7"/>
        <p>
          Velocity and acceleration vectors can be used to analyze objects following projectile motion with air resistance.
        </p>
      </CalloutCard>
    </CalloutContainer>

   </SubSection>

<SubSubSection title="Velocity and acceleration in Cartesian basis" id="cartesian_basis">

         <p>
          Differentiating in a fixed Cartesian basis can be done by differentiating each component.
        </p>

         <DisplayEquation title="Velocity and acceleration in cartesian basis." id="rkv-er" background="True" equation=" \\begin{aligned} \\vec{r} &amp;= r_1 \\hat\\imath + r_2 \\hat\\jmath + r_3 \\hat{k} \\\\  \\vec{v} &amp;= \\dot{r}_1 \\hat\\imath + \\dot{r}_2 \\hat\\jmath + \\dot{r}_3 \\hat{k} \\\\   \\vec{a} &amp;= \\ddot{r}_1 \\hat\\imath + \\ddot{r}_2 \\hat\\jmath + \\ddot{r}_3 \\hat{k} \\end{aligned}" />

</SubSubSection>


<SubSubSection title="Velocity and acceleration in polar basis"  id="polar_basis">

        <p>
          Computing velocity and acceleration in a polar basis must take account of the fact that the basis vectors are not constant.
        </p>

         <DisplayEquation title="Velocity and acceleration in polar basis." id="rkv-ep" background="True" equation=" \\begin{aligned} \\vec{r} &amp;=r\\hat{e}_{r} \\\\   \\vec{v} &amp;=\\dot{r}\\hat{e}_{r} + r\\dot{\\theta}\\hat{e}_{\\theta} \\\\  \\vec{a} &amp;=(\\ddot{r} - r\\dot{\\theta}^2)\\hat{e}_{r} + (r\\ddot{\\theta} + 2 \\dot{r}\\dot{\\theta})\\hat{e}_{\\theta}  \\end{aligned}" />

		<p>
			The acceleration term <InlineEquation equation=" -r \\dot{\\theta}^2 \\hat{e}_r " /> is called the <em> centripetal (center-seeking) </em> acceleration, while the <InlineEquation equation=" 2\\dot{r} \\dot{\\theta} \\hat{e}_{\\theta}" /> term is called the <em>Coriolis</em> acceleration.
			</p>
		 
      <PrairieDrawCanvas id="rkv-fr-c" width="600" height="400">
      <p class="controls">
        <button class="anim-toggle:rkv-fr-c" onclick="rkv_fr_c.toggleAnim()">animate</button>
        <button class="reset:rkv-fr-c" onclick="rkv_fr_c.reset()">reset</button>
        <button class="option-toggle:rkv-fr-c:showLabels" onclick="rkv_fr_c.toggleOption('showLabels')">show labels</button>
      </p>
      <table class="alignTop">
        <tr>
          <td>Movement:</td>
          <td><input type="radio" name="rkv-fr-c-movement" value="circle" class="data-input:rkv-fr-c:movement" checked onchange="rkv_fr_c.setOption('movement', this.value)"/> circle</td>
          <td><input type="radio" name="rkv-fr-c-movement" value="varCircle" class="data-input:rkv-fr-c:movement" onchange="rkv_fr_c.setOption('movement', this.value)"/> var-circle</td>
          <td><input type="radio" name="rkv-fr-c-movement" value="ellipse" class="data-input:rkv-fr-c:movement" onchange="rkv_fr_c.setOption('movement', this.value)"/> ellipse</td>
          <td><input type="radio" name="rkv-fr-c-movement" value="arc" class="data-input:rkv-fr-c:movement" onchange="rkv_fr_c.setOption('movement', this.value)"/> arc</td>
        </tr>
        <tr>
          <td></td>
          <td><input type="radio" name="rkv-fr-c-movement" value="trefoil" class="data-input:rkv-fr-c:movement" onchange="rkv_fr_c.setOption('movement', this.value)"/> trefoil</td>
          <td><input type="radio" name="rkv-fr-c-movement" value="eight" class="data-input:rkv-fr-c:movement" onchange="rkv_fr_c.setOption('movement', this.value)"/> eight</td>
          <td><input type="radio" name="rkv-fr-c-movement" value="comet" class="data-input:rkv-fr-c:movement" onchange="rkv_fr_c.setOption('movement', this.value)"/> comet</td>
          <td><input type="radio" name="rkv-fr-c-movement" value="pendulum" class="data-input:rkv-fr-c:movement" onchange="rkv_fr_c.setOption('movement', this.value)"/> pendulum</td>
        </tr>
        <tr>
          <td>Show:</td>
          <td colspan="4">
            <button class="option-toggle:rkv-fr-c:showVelocity" onclick="rkv_fr_c.toggleOption('showVelocity')">velocity</button>
            <button class="option-toggle:rkv-fr-c:showAcceleration" onclick="rkv_fr_c.toggleOption('showAcceleration')">acceleration</button>
            <button class="option-toggle:rkv-fr-c:showPath" onclick="rkv_fr_c.toggleOption('showPath')">path</button>
          </td>
        </tr>
        <tr>
          <td></td>
          <td colspan="4">
            <button class="option-toggle:rkv-fr-c:showVelDecomp" onclick="rkv_fr_c.toggleOption('showVelDecomp')">velocity decomposition</button>
            <button class="option-toggle:rkv-fr-c:showAccDecomp" onclick="rkv_fr_c.toggleOption('showAccDecomp')">acceleration decomposition</button>
          </td>
        </tr>
        <tr>
          <td>Origin:</td>
          <td><input type="radio" name="rkv-fr-c-origin" value="O1" class="data-input:rkv-fr-c:origin" onchange="rkv_fr_c.setOption('origin', this.value)" checked/> \(O_1\)</td>
          <td><input type="radio" name="rkv-fr-c-origin" value="O2" class="data-input:rkv-fr-c:origin" onchange="rkv_fr_c.setOption('origin', this.value)"/> \(O_2\)</td>
          <td></td>
          <td></td>
        </tr>
      </table>
      <p class="figureCaption mt-2">
        Velocity and acceleration in the polar basis. Compare to
        Figure <a href="#rkv-fa-c">#rkv-fa</a>. Observe that
        <InlineEquation equation="\\hat{e}_r,\\hat{e}_\\theta" /> are not related to the path
        (not tangent, not in the direction of movement), but
        rather are defined only by the position vector. Note also
        that the polar basis depends on the choice of origin.
      </p>
    </PrairieDrawCanvas>
		 
</SubSubSection>


<SubSubSection title="Summary table"  id="summary_table">
    <DisplayTable id="summary_table_table" class_ = "table-sm">
    <thead>
        <tr>
            <th>  </th>
            <th>Cartesian </th>
            <th>Polar</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th> Position </th>
            <td><DisplayEquation equation="\\vec{r} = x\\hat\\imath + y \\hat\\jmath" /></td>
            <td><DisplayEquation equation="\\vec{r} = r \\hat{e}_r" /></td>
        </tr>
        <tr>
            <th> Velocity </th>
            <td><DisplayEquation equation="\\vec{v} = \\dot{x}\\hat\\imath + \\dot{y} \\hat\\jmath" /></td>
            <td><DisplayEquation equation="\\vec{v} = \\dot{r} \\hat{e}_r + r\\dot{\\theta}\\hat{e}_\\theta" /></td>
        </tr>
		    <tr>
            <th> Acceleration </th>
            <td><DisplayEquation equation="\\vec{a} = \\ddot{x}\\hat\\imath + \\ddot{y} \\hat\\jmath" /></td>
            <td><DisplayEquation equation="\\vec{a} = \\frac{d}{dt} (\\vec{v}) = \\ddot{r} \\hat{e}_r + \\dot{\\hat{e}_r} + \\dot{r}\\dot{\\theta}\\hat{e}_\\theta\\ + r\\ddot{\\theta}\\hat{e}_\\theta + r\\dot{\\theta}\\dot{\\hat{e}_\\theta}" />
			    <DisplayEquation equation="\\vec{a} = (\\ddot{r} - r\\dot{\\theta}^2 ) \\hat{e}_r +  (2\\dot{r}\\dot{\\theta} + r\\ddot{\\theta}) \\hat{e}_\\theta" /></td>
        </tr>

    </tbody>
</DisplayTable>
  <CalloutContainer slot = "cards">
    <CalloutCard title = "Heads up!">
      <p>
        <strong><a href = "/md/Position_Velocity_Acceleration">Position velocity acceleration</a></strong> builds on this content in Mechanism design.
      </p>
      <Image src = "/md/Position_Velocity_Acceleration/Vector_loop_1.png" width = "5"/>
      <p>
        Position, Velocity, Acceleration (PVA) analysis is used to analytically determine the motion of a mechanism. Position determines the configuration of the mechanism, velocity determines the kinetic energy and momentum, and acceleration determines the forces. The known geometry, initial configurations, and PVA data of one link determines the PVA data for the other links.
      </p>
    </CalloutCard>
  </CalloutContainer>
</SubSubSection>


<SubSection title="Rotating frames" id="rotating_frames"></SubSection>

<SubSubSection title="Angular velocity" id="angular_velocity">
    
    <p>
        A <em>rotation</em> of a vector is a change which only
        alters the direction, not the length, of a vector. A
        rotation consists of a <em>rotation axis</em> and a
        <em>rotation rate</em>. By taking the rotation axis as a
        direction and the rotation rate as a length, we can write
        the rotation as a vector, known as the <em>angular velocity
        vector</em> <InlineEquation equation="\\vec{\\omega}" />. We use the
        <em>right-hand rule</em> to describe the direction of
        rotation. The units of <InlineEquation equation="\\vec{\\omega}" /> are \(\rm rad/s\) or
        <InlineEquation equation="{}^\\circ/s" />.
      </p>

      <PrairieDrawCanvas id="rkr-fc-c" width="600" height="400">
        <div>
            <p class="controls">
                <button class="anim-toggle:rkr-fc-c" onclick="rkr_fc_c.toggleAnim()";>animate</button>
                <button class="reset:rkr-fc-c" onclick="rkr_fc_c.reset()";>reset</button>
              </p>
              <p class="controls">
                Rotation axis:
                <input type="radio" name="rkr-fc-c-axis" value="i" class="data-input:rkr-fc-c:axis" onchange="rkr_fc_c.setOption('axis', this.value);"/> <InlineEquation equation="\\hat\\imath" />
                <input type="radio" name="rkr-fc-c-axis" value="j" class="data-input:rkr-fc-c:axis ms-3" onchange="rkr_fc_c.setOption('axis', this.value);"/> <InlineEquation equation="\\hat\\jmath" />
                <input type="radio" name="rkr-fc-c-axis" value="k" class="data-input:rkr-fc-c:axis ms-3" onchange="rkr_fc_c.setOption('axis', this.value);" checked/> <InlineEquation equation="\\hat{k}" />
                <input type="radio" name="rkr-fc-c-axis" value="ij" class="data-input:rkr-fc-c:axis ms-3" onchange="rkr_fc_c.setOption('axis', this.value);"/> <InlineEquation equation="\\hat\\imath + \\hat\\jmath" />
                <input type="radio" name="rkr-fc-c-axis ms-3" value="ijk" class="data-input:rkr-fc-c:axis ms-3" onchange="rkr_fc_c.setOption('axis', this.value);"/> <InlineEquation equation="\\hat\\imath + \\hat\\jmath + \\hat{k}" />
              </p>
              <p class="figureCaption mt-3">
                Angular velocity vector \(\vec\omega\). The direction of
                \(\vec\omega\) is the axis of rotation, while the magnitude
                is the speed of rotation (positive direction given by the
                right-hand rule).
              </p>
        </div>
      </PrairieDrawCanvas>

      <CalloutContainer slot="cards">
        <CalloutCard>
            <p>
                The Greek letter ω (lowercase <a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Omega">omega</a>) is
                the last letter of the <a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Greek_alphabet">Greek
                alphabet</a>, leading to expressions such as “from alpha
                to omega” meaning “from start to end”. Omega literally
                means O-mega, meaning O-large, as capital Omega (written
                Ω) developed from capital <a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Omicron">Omicron</a>
                (written Ο) by breaking the circle and turning up the
                edges. Omicron is literally O-micron, meaning O-small, and
                it is the ancestor of the <a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Latin_alphabet">Latin</a>
                letter O that we use today in <a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/English_language">English</a>.
              </p>
              <table id="greek">
                <tr>
                  <td>Α</td><td>α</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Alpha">alpha</a></td>
                  <td>Ι</td><td>ι</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Iota">iota</a></td>
                  <td>Ρ</td><td>ρ</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Rho">rho</a></td>
                </tr>
                <tr>
                  <td>Β</td><td>β</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Beta">beta</a></td>
                  <td>Κ</td><td>κ</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Kappa">kappa</a></td>
                  <td>Σ</td><td>σ</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Sigma">sigma</a></td>
                </tr>
                <tr>
                  <td>Γ</td><td>γ</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Gamma">gamma</a></td>
                  <td>Λ</td><td>λ</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Lambda">lambda</a></td>
                  <td>Τ</td><td>τ</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Tau">tau</a></td>
                </tr>
                <tr>
                  <td>Δ</td><td>δ</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Delta_(letter)">delta</a></td>
                  <td>Μ</td><td>μ</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Mu_(letter)">mu</a></td>
                  <td>Υ</td><td>υ</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Upsilon">upsilon</a></td>
                </tr>
                <tr>
                  <td>Ε</td><td>ε</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Epsilon">epsilon</a></td>
                  <td>Ν</td><td>ν</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Nu_(letter)">nu</a></td>
                  <td>Φ</td><td>φ</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Phi">phi</a></td>
                </tr>
                <tr>
                  <td>Ζ</td><td>ζ</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Zeta">zeta</a></td>
                  <td>Ξ</td><td>ξ</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Xi_(letter)">xi</a></td>
                  <td>Χ</td><td>χ</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Chi_(letter)">chi</a></td>
                </tr>
                <tr>
                  <td>Η</td><td>η</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Eta">eta</a></td>
                  <td>Ο</td><td>ο</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Omicron">omicron</a></td>
                  <td>Ψ</td><td>ψ</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Psi_(letter)">psi</a></td>
                </tr>
                <tr>
                  <td>Θ</td><td>θ</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Theta">theta</a></td>
                  <td>Π</td><td>π</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Pi_(letter)">pi</a></td>
                  <td>Ω</td><td>ω</td><td><a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Omega">omega</a></td>
                </tr>
              </table>
              <p class="mb-0">
                The Greek alphabet, shown above, was the first true <a
                target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Alphabet">alphabet</a>,
                meaning that it has letters representing <a
                target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Phoneme">phonemes</a>
                (basic significant sounds) and includes <a
                target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Vowel">vowels</a> as
                well as <a
                target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Consonant">consonants</a>. The
                Greek alphabet was was derived from the earlier <a
                target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Phoenician_alphabet">Phoenician
                alphabet</a>, which was probably the original parent of
                all alphabets. This shows that the idea of an alphabet is
                so non-obvious that it has only ever been invented once,
                and then always copied after that.
              </p>
        </CalloutCard>
        <CalloutCard title="Application alert!">
          <p>
            <a href="/dyn/celestial_velocities">Celestial velocities</a> uses <strong>angular velocity.</strong>
          </p>
          <PrairieDrawCanvas id = "aov-fe-c" width = "250" height = "250"/>
          <p>
            Angular velocity is an important variable to consider when analyzing celestial objects revolving around one another.
          </p>
        </CalloutCard>
      </CalloutContainer>


	<p> 
	If an object is rotating with angular velocity <InlineEquation equation="\\omega"/> about a fixed origin, then the velocity and acceleration are given by the following relations:
    </p>
	
	<DisplayEquation id="rkv-ef" title="Velocity and acceleration about a fixed origin." background="True" equation=" \\begin{aligned}  \\vec{v} &amp;= \\vec{\\omega} \\times \\vec{r} \\\\ \\vec{a} &amp;= \\vec{\\alpha} \\times \\vec{r} + \\vec{\\omega} \\times (\\vec{\\omega} \\times \\vec{r}) \\end{aligned}" />
	
</SubSubSection>

<SubSubSection title="Vector derivatives and rotations" id="derivatives_rotations">
    <p>
        If a unit vector <InlineEquation equation="\\hat{a}" /> is rotating, then the angular
        velocity vector <InlineEquation equation="\\vec{\\omega}" /> is defined so that:
    </p>

    <DisplayEquation title="Derivative of unit vectors." id="rkr-ew" background="True" equation="\\dot{\\hat{a}} = \\vec{\\omega} \\times \\hat{a}" />

    <DisplayEquation title="Derivative of general vectors." id="rkr-ed" background="True" derivation="True" equation="\\begin{aligned}\\dot{\\vec{a}} = \\underbrace{\\dot{a}\\hat{a}}_{\\operatorname{Proj}(\\dot{\\vec{a}}, \\vec{a})} +\\underbrace{\\vec{\\omega} \\times\\vec{a}}_{\\operatorname{Comp}(\\dot{\\vec{a}}, \\vec{a})}\\end{aligned}">
        <p>
            Using the same approach as <a
            href="/dyn/vectors#rvc-em2">#rvc-em</a> we write <InlineEquation equation="\\vec{a} =a\\hat{a}" /> and differentiate this and use <a
            href="#rkr-ew">rkr-ew</a> to find:

            <DisplayEquation equation="\\begin{aligned}\\dot{\\vec{a}} &amp;= \\frac{d}{dt} \\big( a \\hat{a} \\big) \\\\&amp;= \\dot{a} \\hat{a} + a \\dot{\\hat{a}} \\\\&amp;= \\dot{a} \\hat{a} + a (\\vec\\omega \\times \\hat{a}) \\\\&amp;= \\dot{a} \\hat{a} + \\vec\\omega \\times (a \\hat{a}) \\\\&amp;= \\dot{a} \\hat{a} + \\vec\\omega \\times \\vec{a}.\\end{aligned}" />

            Comparing this to <a href="/dyn/vectors#rvc-em2">#rvc-em</a>
            shows that the two components are the projection and the
            complementary projection, respectively.
          </p>
    </DisplayEquation>

    <DisplayEquation title="Derivative of constant-length vectors." id="rkr-el" background="True" derivation="True" equation=" \\dot{\\vec{a}} = \\vec{\\omega} \\times \\vec{a}\\qquad\\text{if \\(\\vec{a}\\) is constant length}\\">
        <p>
            This can be seen from the fact that <InlineEquation equation="\\dot{a} = 0" /> if \(a\)
            is constant (a fixed length vector), substituted into <a
            href="#rkr-ed">#rkr-ed</a>.
          </p>
    </DisplayEquation>
    
</SubSubSection>

<SubSubSection title="Rotations in 2D" id="rotations_2D">
      <p>
        In 2D the angular velocity can be thought of as a scalar
        (positive for counter-clockwise, negative for clockwise).
        This scalar is just the out-of-plane component of the
        full angular velocity vector. We can draw the angular
        velocity as either a vector pointing out of the plane, or
        as a circle-arrow in the plane, which is simpler for 2D
        diagrams.
      </p>

      <PrairieDrawCanvas id="rkr-fe-c" width="600" height="400">
        <div>
            <p class="controls">
                <button class="anim-toggle:rkr-fe-c" onclick="rkr_fe_c.toggleAnim();">animate</button>
                <button class="reset:rkr-fe-c" onclick="rkr_fe_c.reset();">reset</button>
              </p>
              <p class="controls">
                Show:
                <button class="option-toggle:rkr-fe-c:showVelocity" onclick="rkr_fe_c.toggleOption('showVelocity');">derivative</button>
              </p>
              <p class="figureCaption mt-3">
                Comparison of the vector and scalar representations of
                \(\vec\omega\) for 2D rotations.
              </p>
        </div>
      </PrairieDrawCanvas>

      <p>
        In 2D the angular velocity scalar \(\omega\) is simply the
        derivative of the rotation angle \(\theta\) in the plane:
      </p>

      <DisplayEquation title="Magnitude \\(\\omega\\) is derivative of angle \\(\\theta\\) in 2D." id="rkr-e2" background="True" derivation="True" equation="\\omega = \\dot\\theta">
        <p>
            Take <InlineEquation equation="\\hat{a}" /> to be a unit vector rotating in the 2D
            <InlineEquation equation="\\hat\\imath–\\hat\\jmath" /> plane, making an angle of
            \(\theta\) with the \(x\)-axis, as in Figure <a
            href="#rkr-f2">#rkr-f2</a>. Then:

            <DisplayEquation equation="\\hat{a} = \\cos\\theta \\,\\hat\\imath            + \\sin\\theta \\,\\hat\\jmath." />

            Differentiating this expression gives:

            <DisplayEquation equation="\\dot{\\hat{a}} = -\\sin\\theta \\, \\dot\\theta \\,\\hat\\imath+ \\cos\\theta \\,\\dot\\theta \\,\\hat\\jmath." />

            We now consider an angular velocity vector
            \(\vec\omega\). Because the rotation is in the
            \(\hat\imath\)–\(\hat\jmath\) plane, the angular velocity
            vector must be in the <InlineEquation equation="\\hat{k}" /> direction. Thus
            <InlineEquation equation="\\vec\\omega = \\omega \\hat{k}" />. Now we can compute the
            derivative of <InlineEquation equation=" \\hat{a}" /> using <a
            href="#rkr-ew">#rkr-ew</a>, giving:

            <DisplayEquation equation="\\begin{aligned}\\dot{\\hat{a}} &amp;= \\vec\\omega \\times \\hat{a} \\\\&amp;= \\omega\\hat{k} \\times \\big( \\cos\\theta \\,\\hat\\imath+ \\sin\\theta \\,\\hat\\jmath \\big) \\\\&amp;= \\omega \\cos\\theta \\,(\\hat{k} \\times \\hat\\imath)+ \\omega \\sin\\theta \\,(\\hat{k} \\times \\hat\\jmath) \\\\&amp;= \\omega \\cos\\theta \\,\\hat\\jmath+ \\omega \\sin\\theta \\,(-\\hat\\imath) \\\\&amp;= - \\omega \\sin\\theta \\,\\hat\\imath+ \\omega \\cos\\theta \\,\\hat\\jmath.\\end{aligned}" />

            Comparing this expression to the earlier one for
            <InlineEquation equation="\\dot{\\hat{a}} " />we see that \(\omega = \dot\theta\).
          </p>
      </DisplayEquation>

      <p>
        The right-hand rule convention for angular velocities means
        that counter-clockwise rotations are positive, just like the
        usual angle direction convention.
      </p>

      <CalloutContainer slot="cards">
        <CalloutCard>
            <p>
                Angular directions have long been considered to have
                magical or spiritual significance. In Britain the
                counterclockwise direction was once known
                as <a target="_blank" rel="noopener noreferrer" target="_blank" rel="noopener noreferrer" href="https://en.wikipedia.org/wiki/Widdershins">widdershins</a>,
                and it was considered unlucky to travel around a church in
                a widdershins direction.
              </p>
              <p>
                Interestingly, right-handed people tend to naturally draw
                circles in a counterclockwise direction, and clockwise
                drawing in right-handed children is an early warning sign
                for the later development of schizophrenia [Blau, 1977].
              </p>
              <div class="references">
                <h3>References</h3>
                <Itemize margin="False">
                  <Item>
                    T. H. Blau.
                    Torque and schizophrenic vulnerability.
                    <i>American Psychologist</i>, 32(12):997–1005, 1977.
                    DOI: <a target="_blank" rel="noopener noreferrer" href="http://dx.doi.org/10.1037/0003-066X.32.12.997">10.1037/0003-066X.32.12.997</a>.
                  </Item>
                </Itemize>
              </div>
        </CalloutCard>
    </CalloutContainer>
</SubSubSection>

<SubSubSection title="Rotations and vector “positions”" id="rotations_positions">
    <p>
        The fact that vectors don't have positions means that vector rotations are independent of
        where vectors are drawn, just like for derivatives.
      </p>

    <PrairieDrawCanvas id="rkr-fg-c" width="600" height="400">
        <div >
        
        <p class="controls">
            <button class="anim-toggle:rkr-fg-c" onclick="rkr_fg_c.toggleAnim();">animate</button>
            <button class="reset:rkr-fg-c" onclick="rkr_fg_c.reset();">reset</button>
          </p>
          <p class="controls">
            Show:
            <button class="option-toggle:rkr-fg-c:showRigid" onclick="rkr_fg_c.toggleOption('showRigid');">rigid arrangement</button>
            <button class="option-toggle:rkr-fg-c:showFixed" onclick="rkr_fg_c.toggleOption('showFixed');">fixed origins</button>
            <button class="option-toggle:rkr-fg-c:showDerivatives" onclick="rkr_fg_c.toggleOption('showDerivatives');">derivatives</button>
          </p>
          <p class="figureCaption mt-3">
            Rotational motion of vectors which are drawn moving
            about. Note that the drawn position does not affect the
            angular velocity $\omega$ or the derivative vectors.
          </p>
        </div>
    </PrairieDrawCanvas>
</SubSubSection>

<SubSubSection title="Properties of rotations" id="rotations_properties">
    <p>
        Rotations are <em>rigid transformations</em>, meaning that
        they keep constant all vector lengths and all relative
        vector angles. These facts are reflected in the following
        results, which all consider two vectors <InlineEquation equation="\\vec{a}" /> and
        <InlineEquation equation="\\vec{b}" /> that are rotating with angular velocity
        <InlineEquation equation="\\vec\\omega" />.
      </p>

      <DisplayEquation title="Derivative of rotating vector is orthogonal." id="rkr-e2a" background="True" derivation="True" equation="\\dot{\\vec{a}} \\cdot \\vec{a} = 0">
        <p>
            Using <a href="#rkr-el">#rkr-el</a> and the scalar
            triple product formula <a
            href="https://en.wikipedia.org/wiki/Triple_product">#rvi-es</a> gives:

            <DisplayEquation equation="\\begin{aligned}\\vec{a} \\cdot \\dot{\\vec{a}}&amp;= \\vec{a} \\cdot \\big( \\vec{\\omega} \\times \\vec{a} \\big) \\\\&amp;= \\vec{\\omega} \\cdot \\big( \\vec{a} \\times \\vec{a} \\big) \\\\&amp;= 0.\\end{aligned}" /> 
          </p>
      </DisplayEquation>

      <DisplayEquation title="Angle \\(\\theta\\) between rotating vectors is constant." id="rkr-e2b" background="True" derivation="True" equation="\\theta = \\cos^{-1}\\left(\\frac{\\vec{b} \\cdot\\vec{a}}{b a}\\right) = \\text{constant}">
        <p>
            We first consider the dot product <InlineEquation equation="\\vec{a} \\cdot \\vec{b}" /> and show that this is not changing with
            time. We do this by using the scalar triple product
            formula <a href="https://en.wikipedia.org/wiki/Triple_product" target="_blank">#rvi-es</a> to find:

            <DisplayEquation equation="\\begin{aligned}\\frac{d}{dt} \\big( \\vec{a} \\cdot \\vec{b} \\big)&amp;= \\dot{\\vec{a}} \\cdot \\vec{b} + \\vec{a} \\cdot \\dot{\\vec{b}} \\\\&amp;= (\\vec{\\omega} \\times \\vec{a}) \\cdot \\vec{b} + \\vec{a} \\cdot (\\vec{\\omega} \\times \\vec{b}) \\\\&amp;= \\vec{b} \\cdot (\\vec{\\omega} \\times \\vec{a}) + \\vec{b} \\cdot (\\vec{a} \\times \\vec{\\omega}) \\\\&amp;= \\vec{b} \\cdot (\\vec{\\omega} \\times \\vec{a}) - \\vec{b} \\cdot (\\vec{\\omega} \\times \\vec{a}) \\\\&amp;= 0.\\end{aligned}" />

            Now <InlineEquation equation="\\vec{a} \\cdot \\vec{b}" /> is constant and the lengths
            \(a\) and \(b\) are constant, so the angle \(\theta\) between
            the vectors must be constant.
          </p>
      </DisplayEquation>

      <DisplayEquation title="Rotating vectors parallel to \\(\\vec\\omega\\) are constant." id="rkr-e2c" background="True" derivation="True" equation="\\dot{\\vec{a}} = 0 \\qquad \\text{if \\(\\vec{a}\\) is rotating and parallel to \\(\\vec\\omega\\)}">
        <p>
            From <a href="#rkr-el">#rkr-el</a> we know that the
            derivative is
            
            <DisplayEquation equation="\\dot{\\vec{a}} = \\vec\\omega \\times \\vec{a}," />

            but the cross product is zero for parallel vectors, so
            this the derivative is zero.
          </p>
      </DisplayEquation>
</SubSubSection>

<SubSubSection title="Rodrigues’ rotation formula"  id="rodrigues_formula">
    <p>
        Rodrigues’ rotation formula gives an explicit formula for a
        vector rotated by an angle about a given axis.
    </p>

    <DisplayEquation title="Rodrigues’ rotation formula for \\(\\vec{a}\\) rotated by \\(\\theta\\) about \\(\\hat{b}\\)." id="rkr-er" background="True" derivation="True" equation="\\operatorname{Rot}(\\vec{a}; \\theta, \\hat{b}) =\\vec{a} \\cos\\theta + (\\hat{b} \\times\\vec{a}) \\sin\\theta + \\hat{b} (\\hat{b} \\cdot\\vec{a}) (1 - \\cos\\theta)">
        <p>
            Assume <InlineEquation equation="\\vec{a}" /> is not parallel to
            <InlineEquation equation="\\hat{b}" />. Then let <InlineEquation equation="\\vec{v} = \\hat{b} \\times \\vec{a}" /> and <InlineEquation equation="\\vec{u} = \\vec{v} \\times \\vec{b}" />, so <InlineEquation equation="\\hat{u}, \\hat{v}, \\hat{b}" />
            is a right-handed orthonormal basis. Take
            \(\phi\) to be the angle between <InlineEquation equation="\\vec{a}" /> and
            <InlineEquation equation="\\hat{b}" />. Then we do a rotation by \(\theta\) in
            the <InlineEquation equation="\\hat{u}-\\hat{v}" /> plane:
          </p>
          <p>
            <DisplayEquation equation="\\begin{aligned} \\vec{a} &amp;= a \\sin\\phi\\,\\hat{u} + a \\cos\\phi \\,\\hat{b} \\\\\\operatorname{Rot}(\\vec{a};\\theta,\\hat{b}) &amp;= a\\cos\\theta \\sin\\phi \\,\\hat{u} + a \\sin\\theta \\sin\\phi\\,\\hat{v} + a \\cos\\phi \\,\\hat{b}.\\end{aligned}" />
          </p>
          <p>
            Now we want to convert from the
            <InlineEquation equation="\\hat{u},\\hat{v},\\hat{b}" /> basis to write the rotated
            result in terms of <InlineEquation equation="\\vec{a}, \\hat{b} \\times \\vec{a}), \\hat{b}" />. To do this, we need to work
            out what <InlineEquation equation="\\hat{u},\\hat{v},\\hat{b} " />are in terms of
            these other vectors.
          </p>
          <p>
            <DisplayEquation equation="\\begin{aligned} \\hat{v} &amp;= \\frac{\\hat{b} \\times\\vec{a}}{\\|\\hat{b} \\times \\vec{a}\\|} =\\frac{\\hat{b} \\times \\vec{a}}{a \\sin\\phi} \\\\\\hat{u} &amp;= \\frac{\\vec{v} \\times\\hat{b}}{\\|\\vec{v} \\times \\vec{b}\\|} =\\frac{\\vec{v} \\times \\hat{b}}{a \\sin\\phi} =\\frac{(\\hat{b} \\times \\vec{a}) \\times \\hat{b}}{a\\sin\\phi} = \\frac{\\hat{b} \\times (\\vec{a} \\times\\hat{b})}{a \\sin\\phi} \\\\&amp;= \\frac{\\vec{a} - (\\hat{b}\\cdot \\vec{a}) \\hat{b}}{a \\sin\\phi} = \\frac{1}{a\\sin\\phi} \\vec{a} - \\frac{\\hat{b} \\cdot\\vec{a}}{a \\sin\\phi} \\hat{b}.\\end{aligned}" />
          </p>
          <p>
            Substituting these into the rotated vector expression
            above gives
          </p>
          <p>
            <DisplayEquation equation="\\begin{aligned}\\operatorname{Rot}(\\vec{a};\\theta,\\hat{b}) &amp;= a\\cos\\theta \\sin\\phi \\, \\left( \\frac{1}{a \\sin\\phi}\\vec{a} - \\frac{\\hat{b} \\cdot \\vec{a}}{a\\sin\\phi} \\hat{b} \\right) \\\\&amp; \\qquad + a \\sin\\theta \\sin\\phi \\, \\left(\\frac{\\hat{b} \\times \\vec{a}}{a \\sin\\phi} \\right)+ a \\cos\\phi \\,\\hat{b} \\\\ &amp;= \\cos\\theta\\,\\vec{a} - \\cos\\theta \\,(\\hat{b} \\cdot\\vec{a}) \\,\\hat{b} + \\sin\\theta \\,(\\hat{b} \\times\\vec{a}) + a\\cos\\theta \\,\\hat{b} \\\\ &amp;=\\cos\\theta \\,\\vec{a} + (1 - \\cos\\theta) (\\hat{b}\\cdot \\vec{a}) \\,\\hat{b} + \\sin\\theta \\,(\\hat{b}\\times \\vec{a}).\\end{aligned}" />
          </p>
    </DisplayEquation>
</SubSubSection>

<SubSubSection title="Angular acceleration" id="angular_acceleration">
	 
	 <p>
	  In polar coordinates, acceleration consists of both radial and tangential components. The tangential component is directly related to changes in the angular velocity, which introduces the concept of angular acceleration.
	  </p>
	  
	 <p>
		Angular acceleration, denoted as <InlineEquation equation=" \\ddot{\\theta}" /> represents the rate of change of angular velocity <InlineEquation equation=" \\dot{\\theta}" /> with respect to time. It appears as part of the total acceleration in the tangential direction, described by the unit vector <InlineEquation equation=" \\hat{e}_{\\theta}" />. The full expression for the acceleration in polar coordinates is:
	  </p>
			<DisplayEquation equation=" \\vec{a} = (\\ddot{r} - r\\dot{\\theta}^2) \\hat{e}_r + (r\\ddot{\\theta} + 2\\dot{r}\\dot{\\theta}) \\hat{e}_\\theta" />
	
		<p>
			Here, the first term of the equation represents the <u> radial component</u>, described by the unit <InlineEquation equation="\\hat{e}_r" />, and the second term is the <u>angular component</u>, described by the vector unit <InlineEquation equation="\\hat{e}_{\\theta}" />. In the radial component, there is a <b>radial</b> (<InlineEquation equation="\\ddot{r}" />) and a <b>centripetal</b> (<InlineEquation equation="r\\dot{\\theta}^2" />) term. In the angular component, there is an <b>angular</b> (<InlineEquation equation="r\\ddot{\\theta}" />) and a <b>coriolis</b> (<InlineEquation equation="2\\dot{r}\\dot{\\theta}" />) term.
    </p>
			
			
</SubSubSection>

<SubSection title="Tangential and normal basis" id="tangential_normal_basis"></SubSection>

<SubSubSection title="Normal basis" id="normal_basis">

    <p>
      Consider a particle moving with position vector <InlineEquation equation="\\vec{r}" />
      and corresponding velocity <InlineEquation equation="\\vec{v}" /> and acceleration
      <InlineEquation equation="\\vec{a}" />. The tangential/normal basis
      <InlineEquation equation="\\hat{e}_t,\\hat{e}_n,\\hat{e}_b" /> is:
    </p>

    <DisplayEquation title="Tangential/normal basis vectors." id="rkt-eb" background="True" derivation="True" equation="\\begin{aligned}\\hat{e}_t &amp;= \\hat{v}&amp; &amp;\\text{tangential basis vector} \\\\\\hat{e}_n &amp;= \\frac{\\dot{\\hat{e}}_t}{\\|\\dot{\\hat{e}}_t\\|}= \\frac{\\operatorname{Comp}(\\vec{a},\\vec{v})}{\\|\\operatorname{Comp}(\\vec{a},\\vec{v})\\|}&amp; &amp;\\text{normal basis vector} \\\\\\hat{e}_b &amp;= \\hat{e}_t \\times \\hat{e}_n&amp; &amp;\\text{binormal basis vector} \\\\\\end{aligned}">
      <p>
        These equations are definitions of the basis vectors, so
        the only thing to derive is the alternative formula for
        <InlineEquation equation="\\hat{e}_n" />. Using the definition of <InlineEquation equation="\\hat{e}_t" /> above
        and <a href="/dyn/vectors#rvc-eu">#rvc-eu</a>, we see that

        <DisplayEquation equation="\\dot{\\hat{e}}_t = \\dot{\\hat{v}}        = \\frac{1}{v} \\operatorname{Comp}(\\dot{\\vec{v}}, \\vec{v})        = \\frac{1}{v} \\operatorname{Comp}(\\vec{a}, \\vec{v})." />

        Normalizing both sides gives the desired expression:

        <DisplayEquation equation="\\frac{\\dot{\\hat{e}}_t}{\\|\\dot{\\hat{e}}_t\\|}        = \\frac{\\frac{1}{v} \\operatorname{Comp}(\\vec{a}, \\vec{v})}{        \\left\\|\\frac{1}{v} \\operatorname{Comp}(\\vec{a}, \\vec{v})\\right\\|}        = \\frac{\\frac{1}{v} \\operatorname{Comp}(\\vec{a}, \\vec{v})}{        \\frac{1}{v} \\|\\operatorname{Comp}(\\vec{a}, \\vec{v})\\|}        = \\frac{\\operatorname{Comp}(\\vec{a}, \\vec{v})}{        \\|\\operatorname{Comp}(\\vec{a}, \\vec{v})\\|}." />
      </p>
    </DisplayEquation>

    <p>
      The tangential basis vector <InlineEquation equation="\\hat{e}_t" /> points tangential to
      the path, the normal basis vector <InlineEquation equation="\\hat{e}_n" /> points
      perpendicular (normal) to the path towards the instantaneous
      center of curvature, and the binormal basis vector
      <InlineEquation equation="\\hat{e}_b" /> completes the right-handed basis.
    </p>

    <PrairieDrawCanvas id="rkt-fb-c" width="600" height="400">
      <p class="controls">
        <button class="anim-toggle:rkt-fb-c" onclick="rkt_fb_c.toggleAnim()">animate</button>
        <button class="reset:rkt-fb-c" onclick="rkt_fb_c.reset()">reset</button>
        <button class="option-toggle:rkt-fb-c:showLabels" onclick="rkt_fb_c.toggleOption('showLabels')">show labels</button>
      </p>
      <table class="alignTop">
        <tr>
          <td>Show:</td>
          <td>
            <button class="option-toggle:rkt-fb-c:showPosition" onclick="rkt_fb_c.toggleOption('showPosition')">position vector</button>
            <button class="option-toggle:rkt-fb-c:showVelocity" onclick="rkt_fb_c.toggleOption('showVelocity')">velocity</button>
            <button class="option-toggle:rkt-fb-c:showAcceleration" onclick="rkt_fb_c.toggleOption('showAcceleration')">acceleration</button>
            <button class="option-toggle:rkt-fb-c:showAccDecomp" onclick="rkt_fb_c.toggleOption('showAccDecomp')">acceleration decomposition</button>
          </td>
        </tr>
        <tr>
          <td></td>
          <td>
            <button class="option-toggle:rkt-fb-c:showCenter" onclick="rkt_fb_c.toggleOption('showCenter')">center of curvature</button>
            <button class="option-toggle:rkt-fb-c:showCircle" onclick="rkt_fb_c.toggleOption('showCircle')">osculating circle</button>
            <button class="option-toggle:rkt-fb-c:showAngVel" onclick="rkt_fb_c.toggleOption('showAngVel')">ang. vel.</button>
            <button class="option-toggle:rkt-fb-c:showAngVelDecomp" onclick="rkt_fb_c.toggleOption('showAngVelDecomp')">ang. vel. decomposition</button>
          </td>
        </tr>
      </table>
      <p class="figureCaption mt-3">
        Tangential/normal basis associated with movement around a
        curve in 3D. Observe that the velocity <InlineEquation equation="\\vec{v}" /> is always
        in the <InlineEquation equation="\\hat{e}_t" /> direction and that the acceleration
        <InlineEquation equation="\\vec{a}" /> always lies in the <InlineEquation equation="\\hat{e}_t,\\hat{e}_n" /> plane
        (the osculating plane). The center of curvature and
        osculating circle are defined below.
      </p>
    </PrairieDrawCanvas>
</SubSubSection>

<SubSubSection title="Curvature and torsion" id="curvature">
    
  <DisplayEquationCustom title="Curvature and torsion." id="rkt-ek" background="True" derivation="True">
    <p>
      To better understand the geometry of the tangential/normal
      basis, we can use the <em>curvature</em> \(\kappa\) to
      describe the curving of the path, and the <em>torsion</em>
      \(\tau\) to describe the rotation of the basis about the
      path. These quantities are defined by:
    </p>

    <DisplayEquation equation="\\begin{aligned}\\kappa &amp;= \\frac{d\\hat{e}_t}{ds} \\cdot \\hat{e}_n= \\frac{1}{v} \\dot{\\hat{e}}_t \\cdot \\hat{e}_n &amp; &amp;\\text{curvature} \\\\\\rho &amp;= \\frac{1}{\\kappa}  &amp; &amp;\\text{radius of curvature} \\\\\\tau &amp;= -\\frac{d\\hat{e}_b}{ds} \\cdot \\hat{e}_n= -\\frac{1}{v} \\dot{\\hat{e}}_b \\cdot \\hat{e}_n  &amp; &amp;\\text{torsion} \\\\\\sigma &amp;= \\frac{1}{\\tau}  &amp; &amp;\\text{radius of torsion}\\end{aligned}" />
    <div slot="derivation">
      <p>
        These equations are definitions, so we need only check
        that the two expressions for each of \(\kappa\) and \(\tau\)
        are equivalent. This follows immediately, however, from
        the chain-rule conversions <a href="#rkt-ea">#rkt-ea</a>
        between \(d/ds\) and \(d/dt\).
      </p>
    </div>
  </DisplayEquationCustom>

  <p>
    The <em>radius of curvature</em> \(\rho\) is the radius of
    equivalent circular motion, and the <em>torsion</em>
    determines the rate of rotation of the osculating plane, as
    described below in a section <a href="#tangent_lines_osc_circle">below</a>.
  </p>
</SubSubSection>

<SubSubSection title="Basis derivatives and angular velocity" id="derivatives_angular_velocity">
  <p>
    As the point \(P\) moves along its path, the associated
    tangential/normal basis rotates with an angular velocity
    vector \(\omega\) given by:
  </p>

  <DisplayEquation title="Angular velocity of the tangential/normal basis." id="rkt-ew" background="True" derivation="True" equation="\\begin{aligned}\\vec{\\omega} &amp;= v\\tau \\,\\hat{e}_t + v \\kappa \\,\\hat{e}_b\\end{aligned}">
    <p>
      We start by writing the angular velocity in the
      tangential/normal basis, giving:

      <DisplayEquation equation="\\vec{\\omega} = \\omega_t\\,\\hat{e}_t + \\omega_n\\,\\hat{e}_n+ \\omega_b\\,\\hat{e}_b." />

      Now the basis vector derivatives are given by the cross
      product by <InlineEquation equation="\\vec{\\omega}" /> from <a
      href="#rkr-ew">#rkr-ew</a>, so we can evaluate
      the expressions <a href="#rkt-ek">#rkt-ek</a> for
      curvature and torsion to give:

      <DisplayEquation equation="\\begin{aligned}\\kappa &amp;= \\frac{1}{v} \\dot{\\hat{e}}_t \\cdot \\hat{e}_n \\\\&amp;= \\frac{1}{v} (\\vec{\\omega} \\times \\hat{e}_t) \\cdot \\hat{e}_n \\\\&amp;= \\frac{1}{v} (\\omega_b\\,\\hat{e}_n - \\omega_n\\,\\hat{e}_b) \\cdot \\hat{e}_n \\\\&amp;= \\frac{1}{v} \\omega_b\\end{aligned}" />

      and

      <DisplayEquation equation="\\begin{aligned}\\tau &amp;= -\\frac{1}{v} \\dot{\\hat{e}}_b \\cdot \\hat{e}_n \\\\&amp;= -\\frac{1}{v} (\\vec{\\omega} \\times \\hat{e}_b) \\cdot \\hat{e}_n \\\\&amp;= -\\frac{1}{v} (\\omega_n\\,\\hat{e}_t - \\omega_t\\,\\hat{e}_n) \\cdot \\hat{e}_n \\\\&amp;= \\frac{1}{v} \\omega_t.\\end{aligned}" />

      Rearranging the final expressions in each case gives
      <InlineEquation equation="\\omega_b = v\\kappa" /> and <InlineEquation equation="\\omega_t = v\\tau" />.

      From the definition <a href="#rkt-eb">#rkt-eb</a> of
      <InlineEquation equation="\\hat{e}_n" />, we see that

      <DisplayEquation equation="\\begin{aligned}\\hat{e}_n &amp;= \\frac{\\dot{\\hat{e}}_t}{\\|\\dot{\\hat{e}}_t\\|} \\\\\\hat{e}_n \\cdot \\hat{e}_b &amp;= \\frac{1}{\\|\\dot{\\hat{e}}_t\\|} (\\vec{\\omega} \\times \\hat{e}_t) \\cdot \\hat{e}_b \\\\0 &amp;= \\frac{1}{\\|\\dot{\\hat{e}}_t\\|} (\\omega_b\\,\\hat{e}_n - \\omega_n\\,\\hat{e}_b) \\cdot \\hat{e}_b \\\\&amp;= - \\frac{1}{\\|\\dot{\\hat{e}}_t\\|} \\omega_n.\\end{aligned}" />

      from which we conclude that <InlineEquation equation="\\omega_n = 0" />, giving us
      all three components of <InlineEquation equation="\\vec{\\omega}" />.
    </p>
  </DisplayEquation>

  <p>
    Knowing the angular velocity vector of the tangential/normal
    basis allows us to easily compute the time derivatives of
    each tangential/normal basis vector, as follows:
  </p>

  <DisplayEquation title="Tangential/normal basis vector derivatives." id="rkt-ed" background="True" derivation="True" equation="\\begin{aligned}\\dot{\\hat{e}}_t &amp;= \\phantom{-v\\kappa\\,\\hat{e}_t - } v\\kappa\\,\\hat{e}_n \\\\\\dot{\\hat{e}}_n &amp;= -v\\kappa\\,\\hat{e}_t \\phantom{ - v\\kappa\\,\\hat{e}_n + } + v\\tau\\,\\hat{e}_b \\\\\\dot{\\hat{e}}_b &amp;=\\phantom{-v\\kappa\\,\\hat{e}_t } - v\\tau\\,\\hat{e}_n\\end{aligned}">
    <p>
      We can use the expression <a href="#rkt-ew">#rkt-ew</a>
      for <InlineEquation equation="\\vec{\\omega}" /> together with <a
      href="#rkr-ew">#rkr-ew</a> to find the basis
      vector derivatives:

      <DisplayEquation equation="\\begin{aligned}\\dot{\\hat{e}}_t &amp;= \\vec{\\omega} \\times \\hat{e}_t= (v\\tau \\,\\hat{e}_t + v \\kappa \\,\\hat{e}_b) \\times \\hat{e}_t= v \\kappa \\,\\hat{e}_n \\\\\\dot{\\hat{e}}_n &amp;= \\vec{\\omega} \\times \\hat{e}_n= (v\\tau \\,\\hat{e}_t + v \\kappa \\,\\hat{e}_b) \\times \\hat{e}_n= - v \\kappa \\,\\hat{e}_t + v \\tau \\,\\hat{e}_b \\\\\\dot{\\hat{e}}_b &amp;= \\vec{\\omega} \\times \\hat{e}_b= (v\\tau \\,\\hat{e}_t + v \\kappa \\,\\hat{e}_b) \\times \\hat{e}_b= -v \\tau \\,\\hat{e}_n.\\end{aligned}" />
    </p>
  </DisplayEquation>

  <CalloutContainer slot="cards">
    <CalloutCard title="Notation note">
      <p class="mb-0">
        The tangential/normal basis is also called the
        Frenet–Serret frame after <a
        target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Jean_Fr%C3%A9d%C3%A9ric_Frenet">Jean
        Frédéric Frenet</a> and <a
        target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Joseph_Alfred_Serret">Joseph
        Alfred Serret</a>, who discovered it independently around
        1850. The equations <a href="#rkt-ed">#rkt-ed</a> for the
        basis derivatives are often called the <a
        target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Frenet%E2%80%93Serret_formulas">Frenet-Serret
        formulas</a>, typically written in terms of \(s\) derivatives:
      </p>

      <DisplayEquation equation="\\begin{aligned}\\frac{d\\hat{e}_t}{ds} &amp;= \\phantom{-\\kappa\\,\\hat{e}_t - } \\kappa\\,\\hat{e}_n \\\\\\frac{d\\hat{e}_n}{ds} &amp;= -\\kappa\\,\\hat{e}_t \\phantom{ - \\kappa\\,\\hat{e}_n + } + \\tau\\,\\hat{e}_b \\\\\\frac{d\\hat{e}_b}{ds} &amp;=\\phantom{-\\kappa\\,\\hat{e}_t } - \\tau\\,\\hat{e}_n.\\end{aligned}" />

      <p class="mb-0">
        If we divide the angular velocity vector <a href="#rkt-ew">#rkt-ew</a> by \(v\) then we obtain the vector
      </p>
      <DisplayEquation equation="\\frac{1}{v} \\vec{\\omega} = \\tau\\,\\hat{e}_t + \\kappa\\,\\hat{e}_b," />
      <p  class="mb-0">
        which is known as the <a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Darboux_vector">Darboux vector</a> after its discoverer, <a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Gaston_Darboux">Jean Gaston Darboux</a>.
      </p>
    </CalloutCard>
  </CalloutContainer>
  
</SubSubSection>

<SubSubSection title="Normal and tangential kinematics" id="normal_tangential_acceleration">

    <p>
      While the motion of a point \(P\) along a path defines the
      tangential/normal basis, we can also use this basis to
      express the kinematics of \(P\) itself, giving the following
      expressions for velocity and acceleration.
    </p>

    <DisplayEquation title="Velocity and acceleration in tangential/normal basis." id="rkt-e" background="True" derivation="True"  equation="\\begin{aligned}\\vec{v} &amp;= \\dot{s} \\, \\hat{e}_t \\\\\\vec{a} &amp;= \\ddot{s} \\, \\hat{e}_t + \\frac{\\dot{s}^2}{\\rho} \\hat{e}_n\\end{aligned}">
      <p>
        From the definition <a href="#rkt-eb">#rkt-eb</a> of
        <InlineEquation equation="\\hat{e}_t" /> we see that <InlineEquation equation="v\\,\\hat{e}_t = v\\hat{v} = \\vec{v}" />, which is the first equation
        above. Differentiating this and using <InlineEquation equation="v = \\dot{s}" /> from
        <a href="#rkt-es">#rkt-es</a> gives

        <DisplayEquation equation="\\begin{aligned}\\vec{v} &amp;= \\dot{s}\\,\\hat{e}_t \\\\\\vec{a} = \\dot{\\vec{v}}&amp;= \\ddot{s}\\,\\hat{e}_t + \\dot{s}\\,\\dot{\\hat{e}}_t \\\\&amp;= \\ddot{s}\\,\\hat{e}_t + \\dot{s}(v \\kappa \\,\\hat{e}_n) \\\\&amp;= \\ddot{s}\\,\\hat{e}_t + \\frac{\\dot{s}^2}{\\rho} \\,\\hat{e}_n,\\end{aligned}" />

        where we used the derivative <a
        href="#rkt-ed">#rkt-ed</a> of <InlineEquation equation="\\hat{e}_t" /> in terms of
        the curvature \(\kappa\), and the definition <a
        href="#rkt-ek">#rkt-ek</a> of the radius of curvature to
        give <InlineEquation equation="\\kappa = 1/\\rho" />.
      </p>
    </DisplayEquation>

    <p>
      The above formula shows that the normal acceleration
      component \(a_n\) is determined by the radius of curvature. We
      can therefore also find the radius of curvature from knowing
      the normal acceleration:
    </p>

    <DisplayEquation title="Radius of curvature \\(\\rho\\) for velocity \\(\\vec{v}\\) and acceleration \\(\\vec{a}\\) with angle \\(\\theta\\) between them." id="rkt-er" background="True" derivation="True"  equation="\\rho = \\frac{v^2}{a_n} = \\frac{v^2}{|a\\sin\\theta|}">
      <p>
        From <a href="#rkt-ev">#rkt-ev</a> we known that the
        normal component of the acceleration is given by <InlineEquation equation="a_n =\\dot{s}^2/\\rho" /> and from the definition <a
        href="#rkt-es">#rkt-es</a> of path length we have
        <InlineEquation equation="\\dot{s} = v" />, so this equation can be rearranged to
        give <InlineEquation equation="\\rho = v^2 / a_n" />.
      </p>
      <p>
        Now because <InlineEquation equation="\\vec{a}" /> only has <InlineEquation equation="\\hat{e}_t" /> and
        <InlineEquation equation="\\hat{e}_n" /> components, the <InlineEquation equation="\\hat{e}_n" /> component is
        given by

        <DisplayEquation equation="\\begin{aligned}a_n &amp;= \\|\\operatorname{Comp}(\\vec{a}, \\hat{e}_t)\\| \\\\&amp;= \\|\\operatorname{Comp}(\\vec{a}, \\vec{v})\\| \\\\&amp;= |a \\sin\\theta|,\\end{aligned}" />

        where we used the facts that <InlineEquation equation="\\vec{e}_t" /> is in the
        direction of <InlineEquation equation="\\vec{v}" />, that
        <InlineEquation equation="\\operatorname{Comp}(\\vec{a},\\vec{v})" /> does not depend
        on the magnitude of <InlineEquation equation="\\vec{v}" />, and equation <a
        href="#rvv-em">#rvv-em</a> for the magnitude of
        the complementary projection.
      </p>
    </DisplayEquation>

    <PrairieDrawCanvas id="rkt-ft-c" width="600" height="400">
      <p class="controls">
        <button class="anim-toggle:rkt-ft-c" onclick="rkt_ft_c.toggleAnim()">animate</button>
        <button class="reset:rkt-ft-c" onclick="rkt_ft_c.reset()">reset</button>
        <button class="option-toggle:rkt-ft-c:showLabels" onclick="rkt_ft_c.toggleOption('showLabels')">show labels</button>
      </p>
      <table class="alignTop">
        <tr>
          <td>Movement:</td>
          <td><input type="radio" name="rkt-ft-c-movement" value="circle" class="data-input:rkt-ft-c:movement" onclick="rkt_ft_c.setOption('movement', this.value)" checked/> circle</td>
          <td><input type="radio" name="rkt-ft-c-movement" value="varCircle" class="data-input:rkt-ft-c:movement" onclick="rkt_ft_c.setOption('movement', this.value)"/> var-circle</td>
          <td><input type="radio" name="rkt-ft-c-movement" value="ellipse" class="data-input:rkt-ft-c:movement" onclick="rkt_ft_c.setOption('movement', this.value)"/> ellipse</td>
          <td><input type="radio" name="rkt-ft-c-movement" value="arc" class="data-input:rkt-ft-c:movement" onclick="rkt_ft_c.setOption('movement', this.value)"/> arc</td>
        </tr>
        <tr>
          <td></td>
          <td><input type="radio" name="rkt-ft-c-movement" value="trefoil" class="data-input:rkt-ft-c:movement" onclick="rkt_ft_c.setOption('movement', this.value)"/> trefoil</td>
          <td><input type="radio" name="rkt-ft-c-movement" value="eight" class="data-input:rkt-ft-c:movement" onclick="rkt_ft_c.setOption('movement', this.value)"/> eight</td>
          <td><input type="radio" name="rkt-ft-c-movement" value="comet" class="data-input:rkt-ft-c:movement" onclick="rkt_ft_c.setOption('movement', this.value)"/> comet</td>
          <td><input type="radio" name="rkt-ft-c-movement" value="pendulum" class="data-input:rkt-ft-c:movement" onclick="rkt_ft_c.setOption('movement', this.value)"/> pendulum</td>
        </tr>
        <tr>
          <td>Show:</td>
          <td colspan="4">
            <button class="option-toggle:rkt-ft-c:showPosition" onclick="rkt_ft_c.toggleOption('showPosition')">position vector</button>
            <button class="option-toggle:rkt-ft-c:showVelocity" onclick="rkt_ft_c.toggleOption('showVelocity')">velocity</button>
            <button class="option-toggle:rkt-ft-c:showAcceleration" onclick="rkt_ft_c.toggleOption('showAcceleration')">acceleration</button>
            <button class="option-toggle:rkt-ft-c:showAccDecomp" onclick="rkt_ft_c.toggleOption('showAccDecomp')">acceleration decomposition</button>
          </td>
        </tr>
        <tr>
          <td></td>
          <td colspan="4">
            <button class="option-toggle:rkt-ft-c:showPath" onclick="rkt_ft_c.toggleOption('showPath')">path</button>
            <button class="option-toggle:rkt-ft-c:showCenter" onclick="rkt_ft_c.toggleOption('showCenter')">center of curvature</button>
            <button class="option-toggle:rkt-ft-c:showCircle" onclick="rkt_ft_c.toggleOption('showCircle')">osculating circle</button>
            <button class="option-toggle:rkt-ft-c:showAngVel" onclick="rkt_ft_c.toggleOption('showAngVel')">angular velocity</button>
          </td>
        </tr>
        <tr>
          <td>Origin:</td>
          <td><input type="radio" name="rkt-ft-c-origin" value="O1" class="data-input:rkt-ft-c:origin" onclick="rkt_ft_c.setOption('origin', this.value)" checked/> \(O_1\)</td>
          <td><input type="radio" name="rkt-ft-c-origin" value="O2" class="data-input:rkt-ft-c:origin" onclick="rkt_ft_c.setOption('origin', this.value)"/> \(O_2\)</td>
          <td></td>
          <td></td>
        </tr>
      </table>
      <p class="figureCaption mt-3">
        Velocity and acceleration in the tangential/normal
        basis. Note that the tangential/normal basis does not
        depend on the choice of origin or the position vector, in
        contrast to the polar basis.
      </p>
    </PrairieDrawCanvas>
</SubSubSection>
<SubSubSection id="tangent_lines_osc_circle" title="Tangent lines and osculating circles">

<p>
  Given a point \(P\) moving along a complex path, at a given
  instant of time we can match different components of the
  point's motion with successively more complex geometric
  shapes:
</p>
<DisplayTable class="basic" id="rkt-tm">
  <thead>
    <tr noborder>
      <th>match</th>
      <th>geometric object</th>
      <th>name</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><InlineEquation equation="\\vec{r}" /></td>
      <td>point</td>
      <td>position</td>
    </tr>
    <tr>
      <td><InlineEquation equation="\\vec{r},\\vec{v}" /></td>
      <td>line</td>
      <td>tangent line</td>
    </tr>
    <tr>
      <td><InlineEquation equation="\\vec{r},\\vec{v},\\vec{a}" /></td>
      <td>circle</td>
      <td>osculating circle</td>
    </tr>
  </tbody>
  
</DisplayTable>

<p>
  The <em>osculating circle</em> is the instantaneous
  equivalent circular path. That is, a particle traveling on
  the osculating circle with the same location \(P\), speed
  <InlineEquation equation="\\dot{s}" />, and tangential acceleration <InlineEquation equation="\\ddot{s}" /> as our
  particle would have matching velocity and acceleration
  vectors.
</p>

<DisplayEquation title="Osculating circle" id="rkt-eo" equation="\\text{center C} = \\vec{r} + \\rho \\hat{e}_n,\\qquad \\text{radius} \\; \\rho,\\qquad \\text{normal to} \\; \\hat{e}_b" background="True" derivation="True">
  <p>
  Consider a particle \(P\) with position vector <InlineEquation equation="\\vec{r}_P" />
  moving with velocity <InlineEquation equation="\\vec{v}_P" />
  and acceleration
  <InlineEquation equation="\\vec{a}_P" />
, and let <InlineEquation equation="\\hat{e}_t,\\hat{e}_n,\\hat{e}_b" />be
  the associated tangential/normal basis and <InlineEquation equation="\\rho_P " />
  be the radius of curvature. Set <InlineEquation equation="\\dot{s}_P = v_P" />and
  <InlineEquation equation="\\ddot{s}_P = \\vec{a}_P \\cdot \\hat{e}_t" />
 to be the speed
  and tangential acceleration of \(P\).
</p>
<p>
  Next define the osculating circle as above with center
  <InlineEquation equation="C = \\vec{r}_P + \\rho_P" /> , radius <InlineEquation equation="\\rho_P " />, and normal
  vector <InlineEquation equation="\\hat{e}_b" />.
</p>
<p>
  Now take a second particle \(Q\) moving on the osculating
  circle so that its instantaneous position matches \(P\)
  and it has the same speed <InlineEquation equation="\\dot{s}_Q = \\dot{s}_P" /> and
  tangential acceleration <InlineEquation equation="\\ddot{s}_Q = \\ddot{s}_P" />. This
  means that the radius of the circle <InlineEquation equation="r_Q" />  for \(Q\) is
  matches the osculating circle radius <InlineEquation equation="\\rho_P" />, so <InlineEquation equation="r_Q = \\rho_P" />.
</p>
<p>
  We want to prove that <InlineEquation equation="\\vec{v}_Q = \\vec{v}_P" /> and
  <InlineEquation equation="\\vec{a}_Q = \\vec{a}_P" />.
</p>
<p>
  We will use a polar coordinate system for \(Q\), centered
  at \(C\) and in the plane with normal vector
  <InlineEquation equation="\\hat{e}_b" />. At the current instant when the particles
  are at the same position, this means that <InlineEquation equation="\\hat{e}_r =  -\\hat{e}_n" /> and <InlineEquation equation="\\hat{e}_\\theta = \\hat{e}_t" />. Using the
  circular motion expressions <a
  href="https://en.wikipedia.org/wiki/Circular_motion" target="_blank">#rke-ec</a> we have that the
  velocity of \(Q\) is:

  <DisplayEquation equation="\\begin{aligned}  \\vec{v}_Q &amp;= v_Q \\,\\hat{e}_\\theta \\\\  &amp;= \\dot{s}_Q \\,\\hat{e}_\\theta \\\\  &amp;= \\dot{s}_P \\,\\hat{e}_t = \\vec{v}_P. \\\\  \\end{aligned}" />


  For a particle moving in a circle like \(Q\), the speed is
  given by <InlineEquation equation="\\dot{s}_Q = v_Q = r_Q \\omega_Q" />, and
  differentiating this gives <InlineEquation equation="\\ddot{s}_Q = r_Q  \\dot{\\omega}_Q = r_Q \\alpha_Q" />. Using this, the
  acceleration of \(Q\) is:

  <DisplayEquation equation="\\begin{aligned}  \\vec{a}_Q &amp;= -\\frac{v_Q^2}{\\rho_Q} \\,\\hat{e}_r  + \\rho_Q \\alpha_Q \\,\\hat{e}_\\theta \\\\  &amp;= -\\frac{\\dot{s}_Q^2}{\\rho_Q} \\,\\hat{e}_r  + \\ddot{s}_Q \\,\\hat{e}_\\theta \\\\  &amp;= \\frac{\\dot{s}_P^2}{\\rho_P} \\,\\hat{e}_n  + \\ddot{s}_Q \\,\\hat{e}_t \\\\  &amp;= \\vec{a}_Q.  \\end{aligned}" />


  We thus see that points \(P\) and \(Q\) have the same
  instantaneous velocity and acceleration. This also means
  that the tangential/normal basis computed at this
  instant for \(Q\) will match that of \(P\).
</p>
</DisplayEquation>

<p>
  The osculating circle lies in the <InlineEquation equation="\\hat{e}_t,\\hat{e}_n" />
  plane, which is thus called the <em>osculating
  plane</em>. This plane has normal vector <InlineEquation equation="\\hat{e}_b" />, and
  rotates about <InlineEquation equation="\\hat{e}_t" /> with a rotation rate determined by
  the torsion \(\tau\), as we see from the expression <a
  href="#rkt-ed">#rkt-ed</a> for the derivative of <InlineEquation equation="  \\hat{e}_b." />
</p>

<PrairieDrawCanvas id="rkt-fo-c" height="600" width="600">
  <p class="controls">
    <button class="anim-toggle:rkt-fo-c" onclick="rkt_fo_c.toggleAnim()">animate</button>
    <button class="reset:rkt-fo-c" onclick="rkt_fo_c.reset()">reset</button>
    <button class="option-toggle:rkt-fo-c:showLabels" onclick="rkt_fo_c.toggleOption('showLabels')">show labels</button>
  </p>
  <table class="alignTop">
    <tr>
      <td>Show:</td>
      <td colspan="4">
        <button class="option-toggle:rkt-fo-c:showPosition" onclick="rkt_fo_c.toggleOption('showPosition')">position vector</button>
        <button class="option-toggle:rkt-fo-c:showVelocity" onclick="rkt_fo_c.toggleOption('showVelocity')">velocity</button>
        <button class="option-toggle:rkt-fo-c:showAcceleration" onclick="rkt_fo_c.toggleOption('showAcceleration')">acceleration</button>
        <button class="option-toggle:rkt-fo-c:showAccDecomp" onclick="rkt_fo_c.toggleOption('showAccDecomp')">acceleration decomposition</button>
      </td>
    </tr>
    <tr>
      <td></td>
      <td colspan="4">
        <button class="option-toggle:rkt-fo-c:showLine" onclick="rkt_fo_c.toggleOption('showLine')">tangent line</button>
        <button class="option-toggle:rkt-fo-c:showCircle" onclick="rkt_fo_c.toggleOption('showCircle')">osculating circle</button>
      </td>
    </tr>
    <tr>
      <td colspan=2>
        <div class="d-flex  align-items-baseline">
          <p class="m-0 flex-shrink-1">Match phase:</p>
          <div class="flex-grow-1 d-flex align-items-baseline">

          
              <input type="range" min="0" max="100" value="0" step="1" class="data-input:rkt-fo-c:matchPhasePercent flex-grow-1 mx-2" onchange="rkt_fo_c.setOption('matchPhasePercent', this.value); document.querySelector('span[class*=matchPhasePercent]').innerText = this.value; console.log(this.value);" oninput="rkt_fo_c.setOption('matchPhasePercent', this.value); document.querySelector('span[class*=matchPhasePercent]').innerText = this.value;"/>
              <span class="data-option:rkt-fo-c:matchPhasePercent">0</span>%
          </div>
      </div>
      </td>
    </tr>
  </table>
  <p class="figureCaption mt-2">
    Tangent lines and osculating circles, showing matching of
    velocity or velocity and acceleration, respectively.
  </p>
</PrairieDrawCanvas>

</SubSubSection>


<SubSubSection title="Curvature on curves " id="curvature_on_curves">
    <p>
      Given a parametric curve, its curvature can be directly
      evaluated with:
    </p>

    <DisplayEquation title=" \Curvature of parametric curve \\(\\vec{r}(u)\\) in 3D." id="rkt-ec" background="True" derivation="True" equation="\\kappa = \\frac{\\|\\vec{r}' \\times \\vec{r}''\\|}{\\|\\vec{r}'\\|^3}">
      <p>
        Because the tangential/normal basis vectors <a
        href="#rkt-eb">#rkt-eb</a> are all normalized, it does
        not matter how fast the point moves along the line. We
        can thus evaluate the parametric curve as a function of
        time, giving <InlineEquation equation="\\vec{r}(t)" />. Now:

        <DisplayEquation equation="\\begin{aligned}\\|\\vec{r}'' \\times \\vec{r}'\\| &amp;= \\|\\vec{a} \\times \\vec{v}\\| \\\\&amp;= a v \\sin\\theta \\\\&amp;= \\frac{v^3}{\\rho},\\end{aligned}" />

        where we used the cross product length formula <a
        href="/dyn/vector_calculus#rvv-el">#rvv-el</a> and equation <a
        href="#rkt-er">#rkt-er</a> for the radius of curvature
        <InlineEquation equation="\\rho" />. By definition <a href="#rkt-ek">#rkt-ek</a> the
        curvature is <InlineEquation equation="\\kappa = 1/\\rho" />, so

        <DisplayEquation equation="\\begin{aligned}\\|\\vec{r}'' \\times \\vec{r}'\\|&amp;= v^3 \\kappa \\\\\\kappa &amp;= \\frac{\\|\\vec{r}'' \\times \\vec{r}'\\|}{\\|\\vec{r}'\\|^3}.\\end{aligned}" />
      </p>
    </DisplayEquation>

    <p>
      While the above formula can be used in 2D by taking the
      third component to be zero, it can also be written in an
      explicitly 2D form:
    </p>

    <DisplayEquation title="Curvature of parametric curve \\(x = x(u)\\), \\(y = y(u)\\) in 2D." id="rkt-e2" background="True" derivation="True" equation="\\kappa = \\frac{|x''y' - y''x'|}{(x'^2 + y'^2)^{3/2}}">
      <p>
        This equation is just <a href="#rkt-ec">#rkt-ec</a>
        written in explicit 2D coordinates. To see this, we
        first take the position vector <InlineEquation equation="\\vec{r}(u)" /> to be

        <DisplayEquation equation="\\vec{r}(u) = x(u)\\,\\hat\\imath + y(u)\\,\\hat\\jmath." />

        Now <InlineEquation equation="r'(u) = \\sqrt{(x'(u))^2 + (y'(u))^2}" /> and

        <DisplayEquation equation="\\begin{aligned}\\vec{r}'' \\times \\vec{r}'&amp;= (x''\\,\\hat\\imath + y''\\,\\hat\\jmath)\\times (x'\\,\\hat\\imath + y'\\,\\hat\\jmath) \\\\&amp;= (x''y' - y''x')\\,\\hat{k},\\end{aligned}" />

        so evaluating <a href="#rkt-ec">#rkt-ec</a> gives the
        desired expression.
      </p>
    </DisplayEquation>

    <p>
      We can take this a step further, and obtain an expression for an explicitly defined function.
    </p>

    <DisplayEquation title="Curvature of an explicitly defined function \\(y = f(x).\\)" id="rkt-e3" background="True" derivation="True" equation="\\kappa = \\frac{|y''(x)|}{(1 + y'(x)^2)^{3/2}}">
      <p>
        Use equation <a
        href="#rkt-e2">#rkt‑e2</a> and parametrize the curve using \(x\) as the parametrization variable. Namely:

        <DisplayEquation equation="\\begin{aligned}x = u, \\quad \\quad y = y(u) = y(x)\\end{aligned}" />

        This yields a very elegant expression, as <InlineEquation equation="x'(u) = 1" /> and <InlineEquation equation="x''(u) = 0" />, which lets us arrive at the desired expression <a
        href="#rkt-e3">#rkt‑e3</a>.
      </p>
    </DisplayEquation>
</SubSubSection>

<SubSubSection title="System comparison: Cartesian/polar/tangent-normal" id="system_comparison">

    <DisplayTable id="systemcomp_table" class_ = "table-sm">
    <thead>
        <tr>
            <th>  </th>
            <th>Cartesian </th>
            <th>Polar</th>
			      <th>Tangent-Normal</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th> Position </th>
            <td><DisplayEquation equation="\\vec{r} = x\\hat\\imath + y \\hat\\jmath" /></td>
            <td><DisplayEquation equation="\\vec{r} = r \\hat{e}_r" /></td>
			      <td><DisplayEquation equation="s" /></td>
        </tr>
        <tr>
            <th> Velocity </th>
            <td><DisplayEquation equation="\\vec{v} = \\dot{x}\\hat\\imath + \\dot{y} \\hat\\jmath" /></td>
            <td><DisplayEquation equation="\\vec{v} = \\dot{r} \\hat{e}_r + r\\dot{\\theta}\\hat{e}_\\theta" /></td>
			<td><DisplayEquation equation="\\vec{v} =  \\dot{s}\\hat{e}_t" /></td>
        </tr>
		<tr>
            <th> Acceleration </th>
            <td><DisplayEquation equation="\\vec{a} = \\ddot{x}\\hat\\imath + \\ddot{y} \\hat\\jmath" /></td>
            <td><DisplayEquation equation="\\vec{a} = (\\ddot{r} - r\\dot{\\theta}^2 ) \\hat{e}_r +  (2\\dot{r}\\dot{\\theta} + r\\ddot{\\theta}) \\hat{e}_\\theta" /></td>
			<td><DisplayEquation equation="\\vec{a} = \\ddot{s}\\hat{e}_t + \\dot{s}^2 \\kappa \\hat{e}_n" /></td>
        </tr>

    </tbody>
    </DisplayTable>

</SubSubSection>

</Layout>

<script src="/dyn/particle_kinematics/canvases.js" is:inline></script>
