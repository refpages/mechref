---
import Layout from "../../layouts/Layout.astro" 
import Image from "../../components/Image.astro" 
import Section from "../../components/Section.astro" 
import SubSection from "../../components/SubSection.astro" 
import SubSubSection from "../../components/SubSubSection.astro" 
import BlueText from "../../components/BlueText.astro" 
import RedText from "../../components/RedText.astro" 
import DisplayEquation from "../../components/DisplayEquation.astro"
import DisplayEquationCustom from "../../components/DisplayEquationCustom.astro"
import PrairieDrawCanvas from "../../components/PrairieDrawCanvas.astro"
import Center from "../../components/Center.astro"
import InlineEquation from "../../components/InlineEquation.astro"
import CalloutContainer from "../../components/CalloutContainer.astro"
import CalloutCard from "../../components/CalloutCard.astro"
import Warning from "../../components/Warning.astro"
import Example from "../../components/Example.astro"
import Row from "../../components/Row.astro"
import Col from "../../components/Col.astro"
import SubSubSubSection from "../../components/SubSubSubSection.astro"
import DisplayTable from "../../components/DisplayTable.astro"
import InlineCanvas from "../../components/InlineCanvas.astro"
---

<Layout title = "Shortest flight paths" description = "Learn how vectors apply to shortest flight paths.">

<div slot="navtree">
  <ul class='list-group list-group-flush py-0'> 
    <li class = 'list-group-item py-0'><a class = 'text-decoration-none subsection' href = '#shortest_paths_on_the_sphere'>Shortest paths on the sphere</a></li>
    <li class = 'list-group-item py-0'><a class = 'text-decoration-none subsection' href = '#proof_that_great_circles_are_shortest_paths'>Proof that great circles are shortest paths</a></li>
</ul>
</div>

<Section title="Shortest flight paths" id="shortest_flight_paths">

    <p>
      If we want to fly from Urbana, USA to Delhi, India, which
      path should we follow? The locations of the two cities are:
    </p>
      <DisplayTable class="mb-3" id="coordinates">
        <tr>
          <td></td>
          <td class="fw-bold">Latitude</td>
          <td class="fw-bold">Longitude</td>
        </tr>
        <tr>
          <td>Urbana</td>
          <td>\(\phi = 40^\circ 6' 35'' \rm N\)</td>
          <td>\(\lambda = 88^\circ 12' 15'' \rm W\)</td>
        </tr>
        <tr>
          <td>Delhi</td>
          <td>\(\phi = 28^\circ 36' 36'' \rm N\)</td>
          <td>\(\lambda = 77^\circ 13' 48'' \rm E\)</td>
        </tr>
      </DisplayTable>

    <p>
      Geographic coordinates are typically given
      in <a href="/dyn/vectors#spherical_coordinates">spherical coordinates</a>, but without
      the radius and with the angles given
      in <a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Arcminute">degrees,
      minutes, and seconds</a>, with the latitude first, and the
      direction given as North/South or East/West rather than
      positive/negative. Also note that latitude is the elevation
      angle up from the equator, whereas spherical coordinates
      often use the inclination angle down from the polar axis.
    </p>
    <p>
      Plotting the city locations on a map of the Earth gives the
      figure below. Such a map can give a very misleading idea of
      the shortest route, however.
    </p>
    <Center>
      <PrairieDrawCanvas id="aos-fm-c" width="600" height="600">
        <p>
          Show: 
          <button class="option-toggle:aos-fm-c:showMapPath mx-1" onclick="aos_fm_c.toggleOption('showMapPath')">straight path on map</button>
          <button class="option-toggle:aos-fm-c:showShortestPath mx-1" onclick="aos_fm_c.toggleOption('showShortestPath')">shortest path</button>
        </p>
        <p class="figureCaption">
          Map of the Earth in an <a href="#aos-ip">equirectangular
          projection</a>, showing two possible flight paths from
          Urbana, USA to Delhi, India.
        </p>
      </PrairieDrawCanvas>
    </Center>

    <CalloutContainer slot="cards">
      <CalloutCard title="Reference material">
        <ul>
          <li><a href="/dyn/vector_calculus#dot_product">Dot product</a></li>
          <li><a href="/dyn/vectors#spherical_coordinates">Spherical coordinates</a></li>
        </ul>
      </CalloutCard>
      <CalloutCard>
        <p>
          To get an idea of what it looks like to fly along a great
          circle path, we can view the <a
          target="_blank" rel="noopener noreferrer" href="http://eol.jsc.nasa.gov/Videos/CrewEarthObservationsVideos/">crew
          movies</a> taken from the <a
          target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/International_Space_Station">ISS</a>. The
          movies taken at night are especially evocative, such as <a
          target="_blank" rel="noopener noreferrer" href="http://vimeo.com/32001208">this montage</a> by
          Michael König.
        </p>
        <p>
          Technically the ISS is not following a great circle path
          around the Earth, because the Earth is rotating underneath
          it. However, because the speed of the ISS is much higher
          than the Earth's rotational velocity (90 min versus 24 h
          period), these paths are close to being great circles.
        </p>
      </CalloutCard>
    </CalloutContainer>
</Section>

<SubSection title="Shortest paths on the sphere" id="shortest_paths_on_the_sphere">
  <p>
    Finding the shortest distance between two points on the
    sphere is not a simple calculation given their latitude and
    longitude. As <a href="#aos-fd-c">proved below</a>, the
    shortest path on the sphere is always a <i>great circle</i>,
    which is the intersection of the sphere with a plane through
    the origin. The shortest distance calculation thus reduces
    to finding the angle between the vectors <InlineEquation equation="\\vec{OA}" /> and
    <InlineEquation equation="\\vec{OB}" />, which can be easily done by finding their <a
    href="/dyn/vector_calculus#dot_product">dot product</a> after changing them
    to <a href="/dyn/vectors#rvs-ec">rectangular coordinates</a>.
  </p>
  <Center>
  <PrairieDrawCanvas id="aos-fd-c" width="600" height="600">
    <table class=mt-2>
      <tr>
        <td colspan="3">
          Click and drag to rotate.
          <button class="reset:aos-fd-c" onclick="aos_fd_c.reset()">reset</button>
        </td>
      </tr>
      <tr class="startSection">
        <td>Show:</td>
        <td colspan="2">
          <button class="option-toggle:aos-fd-c:showLabels" onclick="aos_fd_c.toggleOption('showLabels')">labels</button>
          <button class="option-toggle:aos-fd-c:showLatLongLines" onclick="aos_fd_c.toggleOption('showLatLongLines')">latitude/longitude grid</button>
          <p>Earth transparency:
          <input type="range" min="0" max="100" value="20" step="1" class="data-input:aos-fd-c:sphereTransPerc" onchange="aos_fd_c.setOption('sphereTransPerc', this.value); document.querySelector('span[class*=sphereTransPerc]').innerText = this.value;" oninput="aos_fd_c.setOption('sphereTransPerc', this.value); document.querySelector('span[class*=sphereTransPerc]').innerText = this.value;"/>
          <span class="data-option:aos-fd-c:sphereTransPerc">20</span>%
          </p>
        </td>
      </tr>
      <tr>
        <td></td>
        <td colspan="2">
          <button class="option-toggle:aos-fd-c:showCityLatLong" onclick="aos_fd_c.toggleOption('showCityLatLong')">city latitude and longitude</button>
          <button class="option-toggle:aos-fd-c:showCityPositionVectors" onclick="aos_fd_c.toggleOption('showCityPositionVectors')">city position vectors</button>
          <button class="option-toggle:aos-fd-c:showCityGreatCircle" onclick="aos_fd_c.toggleOption('showCityGreatCircle')">great circle between cities</button>
        </td>
      </tr>
      <tr class="startSection latLong">
        <td>City A:</td>
        <td>Latitude:</td>
        <td><input type="range" min="-90" max="90" value="0" step="1" class="data-input:aos-fd-c:latitudeDeg1" onchange="aos_fd_c.setOption('latitudeDeg1', this.value); document.querySelector('span[class*=latitudeDeg1]').innerText = this.value;" oninput="aos_fd_c.setOption('latitudeDeg1', this.value); document.querySelector('span[class*=latitudeDeg1]').innerText = this.value;"/>
        \(\phi_1 = \) <span class="data-option:aos-fd-c:latitudeDeg1">50</span>°</td>
      </tr>
      <tr class="latLong">
        <td></td>
        <td>Longitude:</td>
        <td><input type="range" min="-180" max="180" value="0" step="1" class="data-input:aos-fd-c:longitudeDeg1"onchange="aos_fd_c.setOption('longitudeDeg1', this.value); document.querySelector('span[class*=longitudeDeg1]').innerText = this.value;" oninput="aos_fd_c.setOption('longitudeDeg1', this.value); document.querySelector('span[class*=longitudeDeg1]').innerText = this.value;"/>
        \(\lambda_1 = \) <span class="data-option:aos-fd-c:longitudeDeg1">-20</span>°</td>
        
      </tr>
      
      <tr class="startSection latLong">
        <td>City B:</td>
        <td>Latitude:</td>
        <td><input type="range" min="-90" max="90" value="0" step="1" class="data-input:aos-fd-c:latitudeDeg2" onchange="aos_fd_c.setOption('latitudeDeg2', this.value); document.querySelector('span[class*=latitudeDeg2]').innerText = this.value;" oninput="aos_fd_c.setOption('latitudeDeg2', this.value); document.querySelector('span[class*=latitudeDeg2]').innerText = this.value;"/>
        \(\phi_1 = \) <span class="data-option:aos-fd-c:latitudeDeg2">-20</span>°</td>
      </tr>
      <tr class="latLong">
        <td></td>
        <td>Longitude:</td>
        <td><input type="range" min="-180" max="180" value="0" step="1" class="data-input:aos-fd-c:longitudeDeg2"onchange="aos_fd_c.setOption('longitudeDeg2', this.value); document.querySelector('span[class*=longitudeDeg2]').innerText = this.value;" oninput="aos_fd_c.setOption('longitudeDeg2', this.value); document.querySelector('span[class*=longitudeDeg2]').innerText = this.value;"/>
        \(\lambda_1 = \) <span class="data-option:aos-fd-c:longitudeDeg2">65</span>°</td>
      </tr>
    </table>
  </PrairieDrawCanvas>
</Center>

<CalloutContainer slot="cards">
  <CalloutCard title="Reference material">
    <p>
      There are many different <a
      target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Map_projection">map
      projections</a> that draw the surface of the spherical
      Earth on a two-dimensional map. Because the sphere is
      curved, a map projection cannot preserve both areas and
      angles simultaneously, leading to different trade-offs in
      choosing an appropriate projection for a given
      purpose. Some common projections are shown below.
    </p>
    <Center>
      <PrairieDrawCanvas id="aos-fp-c" width="250" height="250" />
    </Center>
    <p>
      <input type="radio" name="aoa-fp-c-projection" value="equirectangular" class="data-input:aos-fp-c:projection" onclick="aos_fp_c.setOption('projection', this.value);" checked/>
      <a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Equirectangular_projection">Equirectangular</a>.
      <DisplayEquation equation="x = \\lambda, \\quad      y = \\phi" />
    </p>
    <p>
      <input type="radio" name="aoa-fp-c-projection" value="mercator" class="data-input:aos-fp-c:projection" onclick="aos_fp_c.setOption('projection', this.value);" />
      <a
          target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Mercator_projection">Mercator</a>:
      cylindrical, <a target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Conformal_map">conformal</a> (angle-preserving).
      <DisplayEquation equation="x = \\lambda, \\quad y = \\log\\left(\\tan\\Big(\\frac{\\pi}{4} + \\frac{\\phi}{2}\\Big)\\right)      " />
    </p>
    <p>
      <input type="radio" name="aoa-fp-c-projection" value="hobo-dyer" class="data-input:aos-fp-c:projection" onclick="aos_fp_c.setOption('projection', this.value);"/>
      <a
          target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Hobo%E2%80%93Dyer_projection">Hobo-Dyer</a>:
      cylindrical, area-preserving.
      <DisplayEquation equation="x = \\lambda, \\quad y = \\frac{\\sin\\phi}{\\cos^2(37.5^\\circ)}      " />
    </p>
    <p>
      <input type="radio" name="aoa-fp-c-projection" value="winkel" class="data-input:aos-fp-c:projection" onclick="aos_fp_c.setOption('projection', this.value);"/>
      <a
          target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Winkel_tripel_projection">Winkel
      tripel</a>: non-cylindrical, compromise.
      <DisplayEquation equation="\\begin{aligned}\\small      x &amp;= \\frac{1}{2} \\left(\\lambda \\cos\\phi_1 + \\frac{2\\cos\\phi\\sin\\frac{\\lambda}{2}}{{\\rm sinc}\\,\\alpha}\\right) \\\\      y &amp;= \\frac{1}{2} \\left(\\phi + \\frac{\\sin\\phi}{{\\rm sinc}\\,\\alpha}\\right) \\\\      \\alpha &amp;= \\arccos\\Big(\\cos\\phi \\cos\\frac{\\lambda}{2}\\Big) \\\\      \\phi_1 &amp;= \\arccos\\frac{2}{\\pi}      \\end{aligned}     " />
    </p>
    <p>
      You might also be interested in what your choice of map
      projection <a target="_blank" rel="noopener noreferrer" href="http://xkcd.com/977/">says about your
      personality</a>.
    </p>
  </CalloutCard>
</CalloutContainer>
</SubSection>

<SubSection title="Proof that great circles are shortest paths" id="proof_that_great_circles_are_shortest_paths">

  <p>
    Given any two points <InlineEquation equation="A" /> and <InlineEquation equation="B" /> on the surface of the
    Earth, we choose coordinate axes and use <a
    href="#spherical_coordinates">spherical coordinates</a> so that <InlineEquation equation="A" /> is at
    <InlineEquation equation="(r = r_0, \\theta = 0, \\phi = \\frac{\\pi}{2} - \\phi_0)" /> and <InlineEquation equation="B" /> is at
    <InlineEquation equation="(r = r_0, \\theta = 0, \\phi = \\frac{\\pi}{2} + \\phi_0)" />. Here <InlineEquation equation="r_0" /> is
    the radius of the Earth and <InlineEquation equation="0 \\le \\phi_0 \\le \\frac{\\pi}{2}" />. The
    total angle between <InlineEquation equation="\\vec{OA}" /> and <InlineEquation equation="\\vec{OB}" /> is <InlineEquation equation="\\Delta\\phi    = 2\\phi_0" />, so the great-circle distance between <InlineEquation equation="A" /> and <InlineEquation equation="B" />
    is <InlineEquation equation="r_0 \\Delta\\phi" />. We will now prove that this is the
    smallest possible distance.
  </p>
  <p>
    Consider any path from \(A\) to \(B\) on the Earth's
    surface. Suppose we travel along this path, starting at \(A\)
    at time \(t = 0\) and ending at \(B\) at time \(t = 1\). Then the
    position vector at time \(t\) is given by <InlineEquation equation="\\vec{r}(t)" /> with
    spherical coordinates \(r_0\), \(\theta(t)\), \(\phi(t)\) and
    rectangular coordinates \(x(t), y(t), z(t)\).
  </p>
  <p>
    The length \(L\) of our path can be computed by integrating
    the speed from the start time to the end time:
  </p>
  <p>
    <DisplayEquation equation="L = \\int_0^1 \\| \\dot{\\vec{r}} \\| \\, dt= \\int_0^1 \\sqrt{\\dot{x}^2 + \\dot{y}^2 + \\dot{z}^2} \\, dt." />
  </p>
  <p>
    To switch from rectangular to spherical coordinates we use
    the <a href="#rvs-ec">conversion</a>:
  </p>
  <p>
    <DisplayEquation equation="\\begin{aligned}    x &amp;= r \\cos\\theta \\sin\\phi \\\\    y &amp;= r \\sin\\theta \\sin\\phi \\\\    z &amp;= r \\cos\\phi.    \\end{aligned}" />
  </p>
  <p>
    Differentiating these expressions and substituting (or using
    the <a href="#rvs-ep">spherical velocity
    expression</a>) gives the path length expression:
  </p>
  <p>
    <DisplayEquation equation="L = \\int_0^1 r_0 \\sqrt{\\dot{\\phi}^2 + \\dot{\\theta}^2 \\sin^2\\phi} \\, dt\\ge \\int_0^1 r_0 |\\dot{\\phi}| \\, dt\\ge r_0 \\Delta \\phi." />
  </p>
  <p>
    Here we have used the fact that <InlineEquation equation="\\dot{\\theta}^2 \\sin^2\\phi    \\ge 0" /> to see that \(L\) must be at least as big as the
    great-circle distance \(r_0 \Delta \phi\). Thus the
    great-circle distance is the minimum path length between \(A\)
    and \(B\) on the surface of the sphere.
  </p>

  <CalloutContainer slot="cards">
    <CalloutCard>
      <p>
        All the calculations on this page have assumed a spherical
        model of the Earth, given by
        <DisplayEquation equation="x^2 + y^2 + z^2 = R^2," />
        where the radius of the Earth is \(R = 6371\rm\ km.\)
      </p>
      <p>
        Because it spins with a period of about 24 hours, the
        Earth bulges outwards so the center is further from the
        equator than from the poles. A shape that better
        approximates the true Earth is thus an <a
        target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Reference_ellipsoid">ellipsoid</a>,
        given by:
        <DisplayEquation equation="\\left(\\frac{x}{R_{\\rm xy}}\\right)^2+ \\left(\\frac{y}{R_{\\rm xy}}\\right)^2+ \\left(\\frac{z}{R_{\\rm z}}\\right)^2 = 1,      " />
        where <InlineEquation equation="R_{\\rm xy} = 6378\\rm\\ km" /> and <InlineEquation equation="\R_{\\rm z} = 6357\\rm\\ km." />
      </p>
      <p>
        Computing shortest path distances on ellipsoids turns out
        to be much harder than shortest paths on spheres. One set
        of equations for doing this are known as <a
        target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Vincenty%27s_formulae">Vincenty's
        formulae</a>.
      </p>
      <p>
        There is no single best ellipsoid that fits the
        Earth. Instead there are many different ellipsoids in use,
        each of which fit the Earth better near different
        countries (e.g., <a
        target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/North_American_Datum">NAD
        83</a> for North America and <a
        target="_blank" rel="noopener noreferrer" target="_blank" rel="noopener noreferrer" href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS
        84</a> for GPS world-wide). When even more accuracy is
        needed, such as for satellite orbit modeling, then true <a
        target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Geoid">geoid</a> models
        are used, with <a
        target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Spherical_harmonics">spherical
        harmonic expansions</a> determined from <a
        target="_blank" rel="noopener noreferrer" href="http://en.wikipedia.org/wiki/Gravity_Recovery_and_Climate_Experiment">satellite
        gravity measurements</a>.
      </p>
    </CalloutCard>
  </CalloutContainer>

</SubSection>
</Layout>

<script src="/dyn/shortest_flight_paths/worldCoastlineCompressed.js" is:inline></script>
<script src="/dyn/shortest_flight_paths/canvases.js" is:inline></script>
