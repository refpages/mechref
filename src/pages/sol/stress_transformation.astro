---
import Layout from "../../layouts/Layout.astro" 
import Image from "../../components/Image.astro" 
import Section from "../../components/Section.astro" 
import SubSection from "../../components/SubSection.astro" 
import SubSubSection from "../../components/SubSubSection.astro" 
import Itemize from "../../components/Itemize.astro" 
import Item from "../../components/Item.astro" 
import InlineEquation from "../../components/InlineEquation.astro" 
import DisplayEquation from "../../components/DisplayEquation.astro" 
import BlueText from "../../components/BlueText.astro" 
import RedText from "../../components/RedText.astro" 
import Warning from "../../components/Warning.astro"
import Example from "../../components/Example.astro"
import InlineCanvas from "../../components/InlineCanvas.astro"
import PrairieDrawCanvas from "../../components/PrairieDrawCanvas.astro"
import Row from "../../components/Row.astro"
import Col from "../../components/Col.astro"
import Center from "../../components/Center.astro"
import CustomCanvas from "../../components/CustomCanvas.astro"
import SubSubSubSection from "../../components/SubSubSubSection.astro"
import CalloutContainer from "../../components/CalloutContainer.astro"
import CalloutCard from "../../components/CalloutCard.astro"
---
<Layout title="Stress Transformation">

<div slot="navtree">
  <ul class='list-group list-group-flush py-0'> 
      <li class='list-group-item py-0'><a class='text-decoration-none subsection' href='#general-state'>General State of Stress</a></li>
      <li class='list-group-item py-0'><a class='text-decoration-none subsection' href='#sign-convention-general'>Sign Convention</a></li> 
      <li class='list-group-item py-0'><a class='text-decoration-none subsection' href='#plane-stress'>Plane Stress</a></li> 
        <ul class='list-group list-group-flush py-0'>
          <li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#stress-inclined-plane'>Stresses on Inclined Planes</a></li>  
        </ul>
       <li class='list-group-item py-0'><a class='text-decoration-none subsection' href='#plane-stress-transformation'>Plane Stress Transformation</a>
       <ul class='list-group list-group-flush py-0'> 
          <li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#sign-convention-transformation'>Stress Transformation Equations</a></li>
          <li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#principal-stresses'>Principal Stresses</a></li>
          <li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#max-shear'>Maximum Shear Stress</a></li> 
          <li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#pure-shear'>Pure Shear</a></li> 
          <li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#eigenvalues'>Alternative Approach: Eigenvalues</a></li>
        </ul>
      </li>
      <li class='list-group-item py-0'><a class='text-decoration-none subsection' href='#mohr-circle'>Mohr's Circle</a></li> 
        <ul class='list-group list-group-flush py-0'> 
            <li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#2d'>2D Mohr's Circle</a></li> 
            <li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#circle-anim'>Interactive Mohr's circle</a></li>
            <li class='list-group-item py-0'><a class='text-decoration-none subsubsection' href='#3d'>3D Mohr's Circle</a></li> 
        </ul>
      </li>  
  </ul>
</div>


<Section title="Stress Transformation" id="stress-transformation">
</Section>

<SubSection title="General State of Stress" id="general-state">

The general state of stress at a point is characterized by three independent normal stress components and three independent shear stress components, and is represented by the <strong>stress tensor</strong>. The combination of the state of stress for every point in the domain is called the <strong>stress field</strong>.


<Image src="/sol/stress_transformation/General Stress State.png" width="6"> </Image>

<DisplayEquation equation="T = \\begin{bmatrix} \\sigma_{x} & \\tau_{xy} & \\tau_{xz} \\\\ \\tau_{xy} & \\sigma_{y} & \\tau_{yz} \\\\ \\tau_{xz} & \\tau_{yz} & \\sigma_{z} \\end{bmatrix}" title="Stress tensor." background="True" />


<Warning title="Stress is a physical quantity and as such, it is independent of the chosen coordinate system." id="str-ind" remove_button="true">

 </Warning>

</SubSection>

<SubSection title="Sign Convention" id="sign-convention-general">

<Image src="/sol/stress_transformation/Sign Convention.png" width="7"> Sign conventions on 2D elements</Image>

<Itemize>
    <Item> <strong>Positive</strong> normal stress acts <strong>outward</strong> from all faces.</Item>
    <Item> <strong>Positive</strong> shear stress points towards the <strong>positive</strong> axis direction in a <strong>positive</strong> face.</Item>
    <Item> <strong>Positive</strong> shear stress points towards the <strong>negative</strong> axis direction in a <strong>negative</strong> face.</Item>

</Itemize>

</SubSection>

<SubSection title="Plane Stress" id="plane-stress">

<Image src="/sol/stress_transformation/Plane Stress.png" width="2.5"></Image>

 Plane stress occurs when two faces of the cube element are stress free.

<DisplayEquation equation="\\sigma_{z}=\\tau_{zx}=\\tau_{zy}=0" title="Plane  stress." background="True"/>


<Example id="thn-plt" title="Thin plates subject to forces acting in the mid-plane of the plate." solution="False">
  <div class="d-flex">
    <Image src="/sol/stress_transformation/Thin Plate.png" width="3"></Image> 
  </div>
</Example>

</SubSection>

<SubSubSection title="Stresses on Inclined Planes" id="stress-inclined-plane">
<CalloutContainer slot="cards">
    <CalloutCard title="Heads  up!">
        <p>
            <strong> Cauchys stress theorem </strong> builds on this content  in later solid mechanics courses.
            </p>
            <p>
              For any surface that divides the body ( imaginary or real surface), the action of one part of the body on the other is equivalent to the system of distributed internal forces and moments and it is represented by the stress vector <InlineEquation equation="t^n" /> (also called traction), defined on the surface with normal unit vector <InlineEquation equation="n" />.
              <br>
              <br>
              The state of stress at a point in the body is defined by all the stress vectors <InlineEquation equation="t^n" /> associated with all planes (infinite in number) that pass through that point.

              <DisplayEquation equation="t^n=\\boldsymbol{T}\\boldsymbol{n}" title="Cauchys stress theorem."/>

              Cauchys stress theorem states that there exists a stress tensor <InlineEquation equation="T" /> (which is independent of <InlineEquation equation="n" />), such that <InlineEquation equation="t^n" /> is a linear function of <InlineEquation equation="n" />.
            </p>
    </CalloutCard>
</CalloutContainer>

<Image src="/sol/stress_transformation/Plane Transformation.png" width="7"></Image>

<DisplayEquation equation="\\begin{align} \\sigma_{x'} &= {\\bf n}\\cdot\\ {\\bf t}^{n}={\\bf n}\\cdot\\ {\\bf T}\\,{\\bf n} = \\sigma_{x} \\cos ^2(\\theta) + 2 \\,\\tau_{xy} \\sin(\\theta) \\cos(\\theta)+\\sigma_{y} \\sin ^2(\\theta) \\\\ \\tau_{x'y'} &= {\\bf s}\\cdot\\ {\\bf t}^{n}={\\bf s}\\cdot\\ {\\bf T}\\,{\\bf n} = (\\sigma_y - \\sigma_{x}) \\sin(\\theta) \\cos(\\theta) + \\tau_{xy} ( \\cos^2(\\theta) - \\sin^2(\\theta) )  \\end{align}" title="Stresses on inclined planes." background="True" derivation="True" id="str-inc">

  Equilibrium equations.
  <DisplayEquation equation="\\sum F_x: -\\sigma_x (A\\rm\\cos\\theta) - \\tau_{xy}(A\\rm\\sin\\theta) + (\\sigma_{x}'\\rm\\cos\\theta)A - (\\tau_{x'y'}\\rm\\sin\\theta)A=0\\" />
  <DisplayEquation equation="\\sum F_y: -\\sigma_y (A\\rm\\sin\\theta) - \\tau_{xy}(A\\rm\\cos\\theta) + (\\sigma_{x}'\\rm\\sin\\theta)A - (\\tau_{x'y'}\\rm\\cos\\theta)A=0\\" />
  
   Rearrange terms.
  
  <DisplayEquation equation="A[\\sigma_{x}'\\rm\\cos\\theta - \\tau_{x'y'}\\rm\\sin\\theta] = A[\\sigma_{x}\\rm\\cos\\theta + \\tau_{xy}\\rm\\sin\\theta]\\" />
  <DisplayEquation equation="A[\\sigma_{x}'\\rm\\sin\\theta - \\tau_{x'y'}\\rm\\cos\\theta] = A[\\sigma_{x}\\rm\\sin\\theta + \\tau_{xy}\\rm\\cos\\theta]\\" />
  
   Combine into a matrix.
  
  <DisplayEquation equation="\\begin{bmatrix} \\rm\\cos\\theta & -\\rm\\sin\\theta \\\\ \\rm\\sin\\theta & \\rm\\cos\\theta \\end{bmatrix} \\begin{bmatrix}\\sigma_{x}' \\\\ \\tau_{x'y'} \\end{bmatrix} = \\begin{bmatrix} \\sigma_{x}\\rm\\cos\\theta & \\tau_{xy}\\rm\\sin\\theta \\\\ \\sigma_{y}\\rm\\sin\\theta & \\tau_{xy}\\rm\\cos\\theta \\end{bmatrix}" />
          
   Multiply by the inverse.
  
  <DisplayEquation equation="\\begin{bmatrix} \\sigma_{x}' \\\\ \\tau_{x'y'} \\end{bmatrix} = \\begin{bmatrix} \\rm\\cos\\theta & \\rm\\sin\\theta \\\\ -\\rm\\sin\\theta & \\rm\\cos\\theta \\end{bmatrix} \\begin{bmatrix} \\sigma_{x}\\rm\\cos\\theta & \\tau_{xy}\\rm\\sin\\theta \\\\ \\sigma_{y}\\rm\\sin\\theta & \\tau_{xy}\\rm\\cos\\theta \\end{bmatrix}" />
  

  </DisplayEquation>

</SubSubSection>

<SubSection title="Plane Stress Transformation" id="plane-stress-transformation">

  <Image src="/sol/stress_transformation/Coord Transformation.png" width="6"></Image>

<p>
 We think of stresses acting on faces, so we often associate the state of stress with a coordinate system. However, the selection of a coordinate system is arbitrary (materials don't know about coordinates - it's a mathematical construct!) and we could choose to express the stress state acting on any set of faces aligned with <strong>any</strong> coordinate system axes. Furthermore, we can relate the states of stress in each coordinate system to one another through <strong>stress transformation equations.</strong>
</p>
</SubSection>

<SubSubSection title="Stress Transformation Equations" id="sign-convention-transformation">
<Itemize>
	<Item>Both the <InlineEquation equation="x-y" /> (original) and <InlineEquation equation="x’-y’" /> (transformed) systems follow the right-hand rule.</Item>
	<Item>The orientation of an inclined plane (on which the normal and shear stress components are to be determined) will be defined using the angle <InlineEquation equation="\\theta" />. The angle <InlineEquation equation="\\theta" /> is measured from the positive <InlineEquation equation="x" /> to the positive <InlineEquation equation="x’" /> -axis. It is positive if it follows the curl of the right-hand fingers.</Item>
</Itemize>


<DisplayEquation equation = "\\begin{align} \\sigma_x' &= \\frac{\\sigma_x + \\sigma_y}{2} + \\frac{\\sigma_x - \\sigma_y}{2}\\rm\\cos(2\\theta) + \\tau_{xy}\\sin(2\\theta) \\\\ \\sigma_y' &= \\frac{\\sigma_x + \\sigma_y}{2} - \\frac{\\sigma_x - \\sigma_y}{2}\\rm\\cos(2\\theta) - \\tau_{xy}\\sin(2\\theta) \\\\ \\tau_{x'y'} &= -\\frac{\\sigma_x - \\sigma_y}{2}\\rm\\sin(2\\theta) + \\tau_{xy}\\cos(2\\theta) \\end{align}" title="Stress transformation equations." background="True" derivation="True" id="str-trn">
  
  Use the equations from stress in inclined planes.

 <DisplayEquation equation = "\\begin{align} \\sigma_{x}' &= \\sigma_{x} \\cos ^2(\\theta) + 2 \\,\\tau_{xy} \\sin(\\theta) \\cos(\\theta)+\\sigma_{y} \\sin ^2(\\theta) \\\\ \\tau_{x'y'} &= (\\sigma_{y} - \\sigma_{x}) \\sin(\\theta) \\cos(\\theta) + \\tau_{xy} ( \\cos^2(\\theta) - \\sin^2(\\theta) ) \\end{align}" />
                    
 Trigonometric relations.

<DisplayEquation equation = "\\begin{matrix} \\rm\\cos^2\\theta = \\frac{1 + \\rm\\cos(2\\theta)}{2} & \\rm\\sin(2\\theta) = 2\\rm\\sin\\theta\\rm\\cos\\theta \\\\ \\rm\\sin^2\\theta = \\frac{1 - \\rm\\cos(2\\theta)}{2} & \\rm\\cos(2\\theta) = \\rm\\cos^2\\theta - \\rm\\sin^2\\theta \\end{matrix}" />

 Plugging them in.

<DisplayEquation equation = "\\begin{align} \\sigma_{x}' &= \\sigma_{x} \\frac{1 + \\rm\\cos(2\\theta)}{2} + \\tau_{xy} \\sin(2\\theta) + \\sigma_{y} \\frac{1 - \\rm\\cos(2\\theta)}{2} \\\\ \\tau_{x'y'} &= (\\sigma_{y} - \\sigma_{x}) \\frac{\\sin(2\\theta)}{2} + \\tau_{xy} (\\frac{1 + \\rm\\cos(2\\theta)}{2} - \\frac{1 - \\rm\\cos(2\\theta)}{2}) \\end{align}" />

 Rearranging terms.

<DisplayEquation equation="\\begin{align} \\sigma_{x}' &= \\frac{\\sigma_{x}}{2} + \\frac{\\sigma_{x}\\rm\\cos(2\\theta)}{2} + \\frac{\\sigma_{y}}{2} - \\frac{\\sigma_{y}\\rm\\cos(2\\theta)}{2} + \\tau_{xy}\\sin(2\\theta) \\\\ \\tau_{x'y'} &= -\\frac{(\\sigma_{x} - \\sigma_{y})}{2}\\sin(2\\theta) + (\\frac{\\tau_{xy}}{2} + \\frac{\\tau_{xy}\\rm\\cos(2\\theta)}{2} - \\frac{\\tau_{xy}}{2} + \\frac{\\tau_{xy}\\rm\\cos(2\\theta)}{2}) \\end{align}" />

 We can then simplify to the equations above. Note that to derive <InlineEquation equation="\\sigma '_y" />, we use the following.

<DisplayEquation equation="\\sigma_{x}' + \\sigma_{y}' = \\sigma_{x} + \\sigma_{y}" />
 </DisplayEquation>

</SubSubSection>

<SubSubSection title="Principal Stresses" id="principal-stresses">

  <Image src="/sol/stress_transformation/principalStressesElement.png" width="3"> </Image>


<InlineEquation equation="\\sigma_{x}'" /> can be maximized to find the principal stresses. 

<DisplayEquation equation="\\begin{align} \\rm\\tan(2\\theta_{p1}) = \\frac{2\\tau_{xy}}{\\sigma_x - \\sigma_y} \\\\ \\theta_{p2} = \\theta_{p1} + 90^o \\end{align}" title="Angle for maximum normal stress." background="True" derivation="True" id="prn-str">

  Recall. 

<DisplayEquation equation="\\sigma_x' = \\frac{\\sigma_x + \\sigma_y}{2} + \\frac{\\sigma_x - \\sigma_y}{2}\\rm\\cos(2\\theta) + \\tau_{xy}\\sin(2\\theta)\\" />

 To maximize an equation, we take the derivative and set it equal to zero.

<DisplayEquation equation="\\frac{d\\sigma_{x}'}{d\\theta} = -2\\rm\\sin(2\\theta)[\\frac{\\sigma_x-\\sigma_y}{2}] + 2\\rm\\cos(2\\theta)\\tau_{xy} = 0 \\" />

<DisplayEquation equation="(\\sigma_x - \\sigma_y)\\rm\\sin(2\\theta) = 2\\tau_{xy}\\rm\\cos(2\\theta)\\" />

<DisplayEquation equation="\\tan(2\\theta) = \\frac{2\\tau_{xy}}{\\sigma_x - \\sigma_y}\\" />

  </DisplayEquation>
 
 The maximum/minimum normal stress values (the principal stresses) are associated with <InlineEquation equation="\\theta_{p1}" /> and <InlineEquation equation="\\theta_{p2}" />.

<DisplayEquation equation="\\sigma_{1,2} = \\frac{\\sigma_x +\\sigma_y}{2} \\pm \\sqrt{(\\frac{\\sigma_x - \\sigma_y}{2})^2 + \\tau_{xy}^2}\\" title="Principal stresses" background="True"/>

 We use the convention that <InlineEquation equation="\\sigma_1 > \\sigma_2" />.

</SubSubSection>

<SubSubSection title="Maximum Shear Stress" id="max-shear">

  <Image src="/sol/stress_transformation/maxShearStressState.png" width="2"></Image>

 The orientations for the principal stress element and max shear stress element are <InlineEquation equation="45^o" /> apart.

<InlineEquation equation="\\tau_{x'y'}" /> can also be maximized. 



<DisplayEquation equation="\\begin{align} \\tan(2\\theta_{s1}) = \\frac{-(\\sigma_x - \\sigma_y)}{2\\tau_{xy}} \\\\ \\theta_{s2} = \\theta_{s1} + 90^o \\end{align}" title="Angle for maximum shear stress." background="True" derivation="True" id="max-shr">

  Recall.

<DisplayEquation equation="\\tau_{x'y'} = -\\frac{\\sigma_x - \\sigma_y}{2}\\rm\\sin(2\\theta) + \\tau_{xy}\\cos(2\\theta)\\" />

 To maximize an equation, take the derivative and set it equal to zero.

<DisplayEquation equation="\\frac{d\\tau_{x'y'}}{d\\theta} = -\\frac{\\sigma_x - \\sigma_y}{2}2\\rm\\cos(2\\theta) - \\tau_{xy}2\\rm\\sin(2\\theta) = 0\\" />
<DisplayEquation equation="-2\\tau_{xy}\\rm\\sin(2\\theta)  = (\\sigma_x - \\sigma_y)\\rm\\cos(2\\theta)\\" />
<DisplayEquation equation="\\tan(2\\theta) = \\frac{-(\\sigma_x - \\sigma_y)}{2\\tau_{xy}}\\" />

  </DisplayEquation>

 The maximum/minimum in plane shear stress values are associated with <InlineEquation equation="\\theta_{s1}" /> and <InlineEquation equation="\\theta_{s2}" />.

<DisplayEquation equation="|\\tau_{max}| = \\sqrt{(\\frac{\\sigma_x - \\sigma_y}{2})^2 + \\tau_{xy}^2}\\" title="Maximum shear stress." background="True"/>

 A maximum shear stress element has an average normal stress. 

<DisplayEquation equation="\\sigma_{x}' = \\sigma_{y}' = \\sigma_{avg} = \\frac{\\sigma_x + \\sigma_y}{2}\\" title="Average normal stress." background="True"/>

<Warning title="Unlike with the principal stress element, the normal stresses are not zero." remove_button="True" id="max-shr" />

</SubSubSection>

<SubSubSection title="Pure Shear" id="pure-shear">


 A circular shaft under torsion develops <strong>pure shear</strong> on cross-sections between longitudinal planes (the faces of element <InlineEquation equation="a" /> are parallel and perpendicular to the axis of the shaft).

<Image src="/sol/stress_transformation/Circular Shaft Torsion.png" width="7"></Image>

<p>
  For a material under pure shear conditions, the state of stress can be defined with the following relations.
</p>

  <DisplayEquation equation = "\\begin{align} \\sigma_x = \\sigma_y = 0 \\\\ \\tau_{xy} = \\tau_{max} = \\frac{Tc}{J} \\end{align}" title="State of stress for pure shear." background="True"/>. 
  
  <p>
  The stress transformation equations under pure shear can be derived in terms of <InlineEquation equation = "\\tau_{max}"/>, the maximum shear stress under the applied torque. <InlineEquation equation = "\\tau_{max}"/> can be calculated using the formula for shear stress due to torsion: <InlineEquation equation = "\\tau_{max} = \\frac{Tc}{J}"/>, where T is the applied torque, c is the distance from the neutral axis to the stress element, and J is the polar moment of inertia.
</p>

<DisplayEquation equation="\\begin{align} \\sigma_{x'} = 2\\tau_{max} \\sin\\theta \\cos\\theta = \\tau_{max} \\sin (2\\theta) \\\\ \\tau_{x'y'} = \\tau_{max}(\\cos^2\\theta - \\sin^2\\theta) = \\tau_{max} \\cos(2\\theta) \\\\ \\sigma_1 = \\tau_{max} = -\\sigma_2 \\\\ \\theta_{s1} = 0^\\circ = \\theta_{s2} \\pm 90^\\circ \\end{align}" title="Torsion on inclined planes." background="True" derivation="True" id="tor-inc">

  Recall the stress transformation equations.

  <DisplayEquation equation = "\\begin{align} \\sigma_{1,2} = \\frac{\\sigma_x +\\sigma_y}{2} \\pm \\sqrt{(\\frac{\\sigma_x - \\sigma_y}{2})^2 + \\tau_{xy}^2} \\\\= \\frac{0+0}{2} \\pm \\sqrt{(\\frac{0+0}{2})^2 + \\tau_{max}^2} \\\\= \\tau_{max} \\end{align}"/>

  <DisplayEquation equation="\\begin{align} \\rm\\tan(2\\theta_{p1}) = \\frac{2\\tau_{xy}}{\\sigma_x - \\sigma_y} \\\\ = \\frac{2\\tau_{max}}{0-0} \\\\ 2\\theta_{p1} = \\pm 90^\\circ \\\\ \\theta_{p1} = \\pm 45^\\circ \\end{align}"/>

  <DisplayEquation equation="\\begin{align} \\rm\\tan(2\\theta_{s1}) = \\frac{\\sigma_x - \\sigma_y}{2\\tau_{xy}} \\\\ = \\frac{0-0}{2\\tau_{max}} \\\\ 2\\theta_{s1} = 0^\\circ, 180^\\circ \\\\ \\theta_{s1} = 0^\\circ \\\\ \\theta_{s2} = \\pm 90^\\circ \\end{align}"/>

  
  <Image src="/sol/stress_transformation/Max Stress_FIXED.jpg" width="6"></Image>

 Maximum normal stress at 45 degrees.

<DisplayEquation equation="\\begin{align} \\sigma_{x'} = \\tau_{max} = \\frac{Tc}{J} \\\\ \\sigma_{y'} = -\\tau_{max} = -\\frac{Tc}{J} \\\\ \\tau_{x'y'} = 0 \\end{align}" /> 

 Maximum shear stress at 0 degrees.
 <DisplayEquation equation="\\begin{align} \\sigma_{x'} = 0 \\\\ \\sigma_{y'} = 0 \\\\ \\tau_{x'y'} = \\tau_{max} = \\frac{Tc}{J} \\end{align}" /> 


</DisplayEquation>

Normal and shear stresses can be shown graphically as a function of <InlineEquation equation="\\theta" /> to  see how they overlap. 

<Image src="/sol/stress_transformation/normalShearStressRelation_FIXED.jpg" width="4">Stresses based on the transformation angle chosen.</Image>

</SubSubSection>

<SubSubSection title="Alternative Approach: Eigenvalues" id="eigenvalues">
The <strong>eigenvalues</strong> of the stress tensor are called the principal stresses, and the <strong>eigenvectors</strong> define the principal direction vectors.

<p>
 Because of symmetry, the stress tensor (<InlineEquation equation="T" />) has real eigenvalues (<InlineEquation equation="\\lambda" />) and mutually perpendicular eigenvectors (<InlineEquation equation="v" />).
</p>  
 <DisplayEquation equation="Tv = \\lambda v \\rightarrow (T-\\lambda I)v = 0\\" title="Eigenvalues." background="True"/>

 From linear algebra, we know that a system of linear equations <InlineEquation equation="A v = 0" /> has a non-zero solution <InlineEquation equation="\\boldsymbol{v}" /> if, and only if, the determinant of the matrix <InlineEquation equation="\\boldsymbol{T}" /> is zero.

<DisplayEquation equation="\\lambda_{1,2} = \\sigma_{1,2}" title="Eigenvalues relate to stress." background="True" derivation="True" id="egn-str">
  Start with. 

  <DisplayEquation equation="\\det(\\boldsymbol{T}-\\lambda\\boldsymbol{I})=0\\"/>

  Expand the equation.

  <DisplayEquation equation="\\det\\Biggl(\\begin{bmatrix} \\sigma_{x} & \\tau_{xy}\\\\ \\tau_{xy} & \\sigma_{y} \\end{bmatrix} - \\begin{bmatrix} \\lambda & 0\\\\ 0 & \\lambda \\end{bmatrix} \\Biggr) = 0" />
  <DisplayEquation equation="\\det\\Biggl(\\begin{bmatrix} \\sigma_{x}-\\lambda & \\tau_{xy}\\\\ \\tau_{xy} & \\sigma_{y}-\\lambda \\end{bmatrix} \\Biggr) = 0 " />
                        
   Evaluate the determinate.
  
  <DisplayEquation equation="(\\sigma_{x}-\\lambda)(\\sigma_{y}-\\lambda) - \\tau_{xy}^2 = 0\\" />
  <DisplayEquation equation="\\sigma_{x}\\sigma_{y} - \\lambda\\sigma_{y} -\\lambda\\sigma_{x} + \\lambda^2 - \\tau_{xy}^2 = 0\\" />
                        
   Rearrange.
  
  <DisplayEquation equation="\\lambda^2 - \\lambda(\\sigma_{y} + \\sigma_{x}) + \\sigma_{x}\\sigma_{y} - \\tau_{xy}^2 = 0\\" />
  
   Solve for the eigenvalues using the quadratic equation where <InlineEquation equation="\\rm\\ a = 1" />, <InlineEquation equation="\\rm\\ b = -(\\sigma_{y} + \\sigma_{x})" />, and <InlineEquation equation="\\rm\\ c = \\sigma_{x}\\sigma_{y} - \\tau_{xy}^2" />.
  
  
  <DisplayEquation equation="\\begin{align} \\lambda &= \\frac{(\\sigma_{y} + \\sigma_{x}) \\pm \\sqrt{(\\sigma_{y} + \\sigma_{x})^2 - 4(\\sigma_{x}\\sigma_{y} - \\tau_{xy}^2)}}{2} \\\\ &= \\frac{(\\sigma_{x} + \\sigma_{y})}{2} \\pm \\frac{\\sqrt{\\sigma_{y}^2 + 2\\sigma_{y}\\sigma_{x} + \\sigma_{x}^2 - 4\\sigma_{x}\\sigma_{y} + 4\\tau_{xy}^2}}{2} \\\\ &= \\frac{(\\sigma_{x} + \\sigma_{y})}{2} \\pm \\frac{\\sqrt{\\sigma_{y}^2 - 2\\sigma_{y}\\sigma_{x} + \\sigma_{x}^2 + 4\\tau_{xy}^2}}{2} \\\\ &= \\frac{(\\sigma_{x} + \\sigma_{y})}{2} \\pm \\sqrt{\\frac{(\\sigma_{y} - \\sigma_{x})^2 + 4\\tau_{xy}^2}{4}} \\\\ &= \\frac{(\\sigma_{x} + \\sigma_{y})}{2} \\pm \\sqrt{\\biggl(\\frac{\\sigma_{y} - \\sigma_{x}}{2}\\biggr)^2 + \\tau_{xy}^2} \\end{align}" />
  
    This is the same result as the geometric derivation above.  
</DisplayEquation>

To find the eigenvectors, we plug our eigenvalues back into the equation <InlineEquation equation="(\\boldsymbol{T}-\\lambda\\boldsymbol{I})\\boldsymbol{v} = 0" />.


<DisplayEquation equation="\\theta_{p1} = \\tan^{-1}\\Bigl(\\frac{\\sigma_1 - \\sigma_x}{\\tau_{xy}}\\Bigr) = \\tan^{-1}\\Bigl(\\frac{\\tau_{xy}}{\\sigma_1 - \\sigma_y}\\Bigr)\\" title="First eigenvector angle." background="True" derivation="True" id="fst-egn">

  <DisplayEquation equation="\\lambda_1 = \\sigma_1" />
  
  <DisplayEquation equation="\\begin{bmatrix} \\sigma_{x}-\\sigma_{1} & \\tau_{xy}\\\\ \\tau_{xy} & \\sigma_{y}-\\sigma_{1} \\end{bmatrix} \\begin{bmatrix} v_{11} \\\\ v_{12} \\end{bmatrix} = 0" />
                        
  Multiplying out gives two equations.

  <DisplayEquation equation="(\\sigma_{x}-\\sigma_{1})v_{11} + \\tau_{xy}v_{12} = 0\\" />
  <DisplayEquation equation="\\tau_{xy}v_{12} + (\\sigma_{x}-\\sigma_{1})v_{12} = 0\\" />

  The angle of the eigenvector. 

  <DisplayEquation equation="\\theta_{p1} = \\tan^{-1}\\Bigl(\\frac{v_{12}}{v_{11}}\\Bigr)\\" />

</DisplayEquation>

We can repeat this procedure for the second eigenvalue, <InlineEquation equation="\\lambda_2 = \\sigma_2" />.


<DisplayEquation equation="\\theta_{p2} = \\tan^{-1}\\Bigl(\\frac{\\sigma_2 - \\sigma_x}{\\tau_{xy}}\\Bigr) = \\tan^{-1}\\Bigl(\\frac{\\tau_{xy}}{\\sigma_2 - \\sigma_y}\\Bigr)\\" title="Second eigenvector angle." background="True"/>
 
</SubSubSection>

<SubSection title="Mohr's Circle" id="mohr-circle">
Mohr's circle is a graphical representation of stress transformations. The equations for stress transformations actually describe a circle if we consider the normal stress <InlineEquation equation="\\sigma" /> to be the x-coordinate and the shear stress <InlineEquation equation="\\tau" /> to be the y-coordinate.
</SubSection>
  
  <SubSubSection title="2-D Mohr's Circle" id="2d">
   <Image src="/sol/stress_transformation/mohrsCircle.png" width="4"></Image>
  
  <DisplayEquation equation="C = \\sigma_{avg} = \\frac{\\sigma_x +\\sigma_y}{2} = \\frac{\\sigma_1 +\\sigma_2}{2}\\" title="Circle centroid." background="True"/>
  
  <DisplayEquation equation="R = \\sqrt{(\\frac{\\sigma_x - \\sigma_y}{2})^2 + \\tau_{xy}^2}\\" title="Circle radius." background="True"/>
  
  <DisplayEquation equation="\\begin{align} \\rm\\ Point \\ X&: (\\sigma_x, \\tau_{xy}) \\\\ \\rm\\ Point \\ Y&: (\\sigma_y, -\\tau_{xy}) \\end{align}" title="Two points of the circle." background="True"/>
  
  The principal stresses are where the circle crosses the x-axis, and the maximum shear stress is the highest y-coordinate of the circle. 
  
  </SubSubSection>
  
  <SubSubSection title="Interactive Mohr's circle" id="circle-anim">
  
    <Example id="int-mrh" title="Interactive Mohr's circle" solution="True">
      <div class="d-flex flex-row">
        <Row>
          <Col values="4 md-5">
            <p>
              The stress element below is plotted on Mohr’s circle as shown in the left image. The right image shows the new orientation of the stress element. 
              Use the slider below to change the angle and see the corresponding angle for maximum normal stress and maximum shear stress. 
              
              <br>
              </p>
          </Col>
          <Col values="8 md-5">
            <Image src="/sol/stress_transformation/mohrs_demo.png" width="5"></Image>
          
          </Col>
        </Row>
          
        </div>
      </div>
      <div slot="solution">
          <p>
                    

            <Image src="/sol/stress_transformation/mohrs_demo_solution.png" width="7"></Image>
            
            </p>
      </div>
    </Example>
    
  <div class="row">
    <Col values="0 md-1 lg-2"></Col>
    <Col values="12 md-10 lg-8">
      <div class="w-100 p-2 m-0" style="border: 2px solid var(--bs-border-color); border-radius: 10px;">
        <Row>
          <Col values="4">
            <p class="mb-1"><InlineEquation equation="\\sigma_x" />: -80</p>
            <p class="mb-1"><InlineEquation equation="\\sigma_y" />: 50</p>
            <p class="mb-1"><InlineEquation equation="\\tau_{xy}" />: -25</p>
        </Col>
          <Col values="4">
              <p class="mb-1"><InlineEquation equation="\\sigma_1" />: <span id="sigma_1"></span></p>
              <p class="mb-1"><InlineEquation equation="\\sigma_2" />: <span id="sigma_2"></span></p>
              <p class="mb-1"><InlineEquation equation="\\tau_{max}" />: <span id="tau_max"></span></p>
          </Col>
          <Col values="4">
            <p class="mb-1"><InlineEquation equation="\\sigma_{x^{\\prime}}" />: <span id="sigma_xp"></span></p>
            <p class="mb-1"><InlineEquation equation="\\sigma_{y^{\\prime}}" />: <span id="sigma_yp"></span></p>
            <p class="mb-1"><InlineEquation equation="\\tau_{x^{\\prime}y^{\\prime}}" />: <span id="tau_xpyp"></span></p>
          </Col>
        </Row>
      </div>
    </Col>
    <Col values="0 md-1 lg-2"></Col>
  </div>
  <p></p>
  <div class="w-100" id="anim-container">
    <canvas id="stt-mc-c" height="300" width="300" style="background: white; border: 1px solid black; border-radius: 10px;"></canvas>
  
    <canvas id="stt-cb-c" height="300" width="300" style="background: white; border: 1px solid black; border-radius: 10px;"></canvas>
  </div>
  
  
  <Row> 
    <Col values="12">
      <div class="d-flex  align-items-baseline">
          <p class="m-0 flex-shrink-1">Angle:</p>
          <div class="flex-grow-1 d-flex align-items-baseline">
              <input type="range" min="-90" max="90" value="0" step="1" class="data-input:stt-cb-c:theta flex-grow-1 mx-2" onchange="stt_cb_c.setOption('theta', this.value); stt_mc_c.setOption('theta', this.value); document.querySelector('span[class*=theta]').innerText = this.value;" oninput="stt_cb_c.setOption('theta', this.value); stt_mc_c.setOption('theta', this.value); document.querySelector('span[class*=theta]').innerText = this.value;"/>
                  \(\theta = \; \) <span class="data-option:avb-fp-c:theta">0</span>\(^\circ\)
          </div>
      </div>
    </Col>
  </Row>
  
  <script is:inline>
    const container = document.querySelector("#anim-container");
    const cb = document.querySelector("#stt-cb-c");
    const mc = document.querySelector("#stt-mc-c");
  
    function resize_anim_container(){
      var container_width = container.clientWidth;
  
      if (container_width < 600){
        cb.width = Math.round(container_width)-8;
        cb.height = Math.round(container_width)-8;
        mc.width = Math.round(container_width)-8;
        mc.height = Math.round(container_width)-8;
      }else{
        cb.width = Math.round(container_width/2)-8;
        cb.height = Math.round(container_width/2)-8;
        mc.width = Math.round(container_width/2)-8;
        mc.height = Math.round(container_width/2)-8;
      }
      
    }
  
    resize_anim_container();
  
    window.addEventListener("resize", function(){
      resize_anim_container();
  
      stt_mc_c.redraw();
      stt_cb_c.redraw();
    })
  </script>
  
  
  <script is:inline>
    $(document).ready(function() {
    
        stt_mc_c = new PrairieDraw("stt-mc-c", function() {
          this.setUnits(5, 5);
          
          this.addOption("theta", 0)
  
          var sx = -80;
          var sy =  50;
          var tau =  -25;
  
          var theta_p = -Math.atan(2*tau/(sx-sy));
  
          var theta = Math.PI/180*this.getOption('theta');
  
          var savg = (sx+sy)/2;
          var R = Math.sqrt((sx-sy)**2/4 + tau**2);
          var radius = 1.7;
          var O = $V([0, 0]);
          
          this.circle(O, radius, false)
          this.line($V([(sx-savg)/R*radius, -tau/R*radius]), $V([(sy-savg)/R*radius, tau/R*radius]));
          this.text($V([(sx-savg)/R*radius, -tau/R*radius]), $V([-1,-1]), `  X (${sx}, ${tau})`);
          this.text($V([(sy-savg)/R*radius, tau/R*radius]), $V([1,1]), `Y (${sy}, ${-tau})  `);
          this.text(O, $V([1, 1]), `(${savg}, ${0})`);

  
          this.text($V([radius, 0]), $V([-1, 1]), `s1`);
          this.text($V([-radius, 0]), $V([1, 1]), `s2`);
  
          this.line(O, $V([Math.cos(theta_p+2*theta)*radius, Math.sin(theta_p+2*theta)*radius]), 'blue');
          this.point($V([Math.cos(theta_p+2*theta)*radius, Math.sin(theta_p+2*theta)*radius]), 'blue');
          this.line(O, $V([-Math.cos(theta_p+2*theta)*radius, -Math.sin(theta_p+2*theta)*radius]), 'blue');
          this.point($V([-Math.cos(theta_p+2*theta)*radius, -Math.sin(theta_p+2*theta)*radius]), 'blue');
  
          if (theta > 0){
            this.arc(O, radius/2, theta_p, theta_p+2*theta, false);
            this.text($V([Math.cos(theta_p+2*theta)*radius/2, Math.sin(theta_p+2*theta)*radius/2]), $V([-1, -1])," 2θ");
          }else if (theta < 0){
            this.arc(O, radius/2, theta_p+2*theta, theta_p, false);
            this.text($V([Math.cos(theta_p+2*theta)*radius/2, Math.sin(theta_p+2*theta)*radius/2]),$V([1, 1]), " 2θ");
          }
          
          document.querySelector("span#sigma_1").innerText = Math.round((savg + R)*100)/100;
          document.querySelector("span#sigma_2").innerText = Math.round((savg - R)*100)/100;
          document.querySelector("span#tau_max").innerText = Math.round((R)*100)/100;
  
          var current_angle = 2*theta;
  
          var sxp = Math.round((savg + (sx-sy)/2*Math.cos(current_angle)+tau*Math.sin(current_angle))*100)/100;
          var syp = Math.round((savg - (sx-sy)/2*Math.cos(current_angle)-tau*Math.sin(current_angle))*100)/100;
          var txpyp = Math.round((-(sx-sy)/2*Math.sin(current_angle)+tau*Math.cos(current_angle))*100)/100;
          
          document.querySelector("span#sigma_xp").innerText = sxp;
          document.querySelector("span#sigma_yp").innerText = syp;
          document.querySelector("span#tau_xpyp").innerText = txpyp;
  
          var xp_location = $V([-Math.cos(theta_p+2*theta)*radius, -Math.sin(theta_p+2*theta)*radius]);
          var yp_location = $V([Math.cos(theta_p+2*theta)*radius, Math.sin(theta_p+2*theta)*radius]);
  
  
          if(xp_location.dot($V([1, 0])) > 0){
            if(xp_location.dot($V([0, 1])) > 0){
              this.text(xp_location, $V([-1,-1]), `  X' (${Math.round(sxp)}, ${Math.round(txpyp)})`);
              this.text(yp_location, $V([1, 1]), `  Y' (${Math.round(syp)}, ${Math.round(-txpyp)})`);
            }else{
              this.text(xp_location, $V([-1, 1]), `  X' (${Math.round(sxp)}, ${Math.round(txpyp)})`);
              this.text(yp_location, $V([1, -1]), `  Y' (${Math.round(syp)}, ${Math.round(-txpyp)})`);
            }
          }else{
            if(xp_location.dot($V([0, 1])) > 0){
              this.text(xp_location, $V([1,-1]), `  X' (${Math.round(sxp)}, ${Math.round(txpyp)})`);
              this.text(yp_location, $V([-1, 1]), `  Y' (${Math.round(syp)}, ${Math.round(-txpyp)})`);
            }else{
              this.text(xp_location, $V([1, 1]), `  X' (${Math.round(sxp)}, ${Math.round(txpyp)})`);
              this.text(yp_location, $V([-1,-1]), `  Y' (${Math.round(syp)}, ${Math.round(-txpyp)})`);
            }
            
          }
          
          sigma_equals_0 = -savg/R*radius

          this.arrow($V([sigma_equals_0, radius+.5]), $V([sigma_equals_0, -radius-.5]))
          this.text($V([sigma_equals_0, -radius-.5]), $V([-1, 1]), "τ")

          this.arrow($V([-radius-.5, 0]), $V([radius+.5, 0]))
          this.text($V([radius+.5, 0]), $V([-1, 1]), "σ")

      })
    });
    </script>
  
  <script is:inline>
  $(document).ready(function() {
  
      stt_cb_c = new PrairieDraw("stt-cb-c", function() {
        this.setUnits(4, 4);
  
        this.addOption("theta", 0)
  
        var O = $V([0, 0]);
        var theta = Math.PI/180*this.getOption('theta');
  
        var width = 2;
        var height = 2;
  
        var rC = $V([0, 0]);
  
        var axis_length = 1.5;
        
        var x = $V([Math.cos(theta)*axis_length,Math.sin(theta)*axis_length]);
        var y = $V([-Math.sin(theta)*axis_length, Math.cos(theta)*axis_length]);
  
        this.arrow(rC, rC.add(x));
        this.labelLine(rC, rC.add(x), $V([1, 1]), "x'")
        this.arrow(rC, rC.add(y));
        this.labelLine(rC, rC.add(y), $V([1, 1]), "y'")
  
        this.arrow(rC, rC.add($V([axis_length, 0])));
        this.arrow(rC, rC.add($V([0, axis_length])));
  
        if(theta > 0){
          this.text(rC.add($V([width/4, 0])), $V([0, 1]), "θ");
          this.arc(rC, width/4, 0, theta, false)
        }else if (theta < 0){
          this.text(rC.add($V([width/4, 0])), $V([0, -1]), "θ");
          this.arc(rC, width/4, theta, 0, false)
        }
        
        this.rectangle(width, height, O, theta, false);
  
        this.translate($V([0, -5.5]))
  
        this.circle(O, 2.5, false)
        
    })
  });
  </script>
  </SubSubSection>
  
  
  <SubSubSection title="3-D Mohr's Circle" id="3d">
    <Image src="/sol/stress_transformation/3dMohrsCircle.png" width="7"></Image>
    
    <DisplayEquation equation="C = \\sigma_{avg} = \\frac{\\sigma_1 +\\sigma_3}{2}\\" title="Circle centroid." background="True"/>
  
  <DisplayEquation equation="R = \\frac{\\sigma_1 - \\sigma_3}{2} " title="Circle radius." background="True"/>
  
  <DisplayEquation equation="(\\sigma_{plane}, \\tau_{plane})" title="Points of the circle are plotted using each face." background="True"/>
  
  The principal stresses are where the circle crosses the x-axis, and the maximum shear stress is the highest y-coordinate of the circle. 
  </SubSubSection>

</Layout>
